{"title":"WIFI主机Pro","uid":"de9412215381048814bf3f7d24246cbf","slug":"wifi&4G/wifi&4G第一部分   校招王心流","date":"2022-08-15T10:49:36.000Z","updated":"2023-02-22T16:14:59.447Z","comments":true,"path":"api/articles/wifi&4G/wifi&4G第一部分   校招王心流.json","keywords":null,"cover":"https://cover.png","content":"<h1 id=\"wifi-amp-4G\"><a href=\"#wifi-amp-4G\" class=\"headerlink\" title=\"wifi&amp;4G\"></a><font color=#996633 >wifi&amp;4G</font></h1><h2 id=\"STM32单片机最小系统\"><a href=\"#STM32单片机最小系统\" class=\"headerlink\" title=\"STM32单片机最小系统\"></a><font color=#9400D3 >STM32单片机最小系统</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>单片机最小系统概念</strong></p>\n<p>单片机正常工作必不可少的电路，就是单片机的最小系统电路</p>\n<p><strong>STM32最小系统包括</strong></p>\n<p>电源，复位电路，时钟电路，烧录接口，boot0和boot1</p></blockquote>\n<h3 id=\"电源\"><a href=\"#电源\" class=\"headerlink\" title=\"电源\"></a><font color=#FF0033 >电源</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>STM32单片机工作的电源范围:2.0-3.6V\t\t\t一般都选择3.3V</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025052705832.png-bugs_blog\" alt=\"image-20221025052705832\"></p>\n<p>C2 C3 C4 C5是<code>滤波</code>的作用，一般单片机或芯片的电源入口在设计的时候都会加104贴片电容。较少电源的纹波。</p></blockquote>\n<h4 id=\"VDDA-VSSA说明\"><a href=\"#VDDA-VSSA说明\" class=\"headerlink\" title=\"VDDA,VSSA说明\"></a><font color=#0000CC >VDDA,VSSA说明</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>VDDA为所有的模拟电路部分供电，包括：ADC模块，复位电路，PVD （可编程电压监测器），PLL，上电复位（POR）和掉电复位（PDR）模块，控制VBAT切换的开关等。即使不使用ADC功能，也需要连接VDDA，&#x3D;&#x3D;强烈建议VDD和VDDA使用同一个电源供电&#x3D;&#x3D;。VDD与VDDA之间的电压差不能超过300mV，VDD与VDDA应该同时上电或掉电。</p>\n<p>VDDA,VSSA是模拟部分的电源，因为它连接着复位电路，所以这个必须接，否则无法下载代码。</p></blockquote>\n<h3 id=\"复位电路\"><a href=\"#复位电路\" class=\"headerlink\" title=\"复位电路\"></a><font color=#FF0033 >复位电路</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>STM32采用的是低电平复位</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025053936416.png-bugs_blog\" alt=\"image-20221025053936416\"></p></blockquote>\n<h3 id=\"时钟电路\"><a href=\"#时钟电路\" class=\"headerlink\" title=\"时钟电路\"></a><font color=#FF0033 >时钟电路</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>官方建议STM32F105&#x2F;107 系列采用 <code>25MHZ</code></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025062814347.png-bugs_blog\" alt=\"image-20221025062814347\"></p></blockquote>\n<h3 id=\"烧录接口\"><a href=\"#烧录接口\" class=\"headerlink\" title=\"烧录接口\"></a><font color=#FF0033 >烧录接口</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>我们采用的SWD 烧录 接口，同时兼容 串口烧录方式<br>SWD 是实际开发中最常用的一种烧录方式:</p>\n<ul>\n<li>烧录需要的接口比较少:   \t<code>CLK</code>   <code>DIO</code>   <code>VCC</code>   <code>GND</code></li>\n<li>支持仿真</li>\n</ul></blockquote>\n<h4 id=\"SWD烧录接口\"><a href=\"#SWD烧录接口\" class=\"headerlink\" title=\"SWD烧录接口\"></a><font color=#0000CC >SWD烧录接口</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025063046918.png-bugs_blog\" alt=\"image-20221025063046918\"></p></blockquote>\n<h4 id=\"串口烧录接口\"><a href=\"#串口烧录接口\" class=\"headerlink\" title=\"串口烧录接口\"></a><font color=#0000CC >串口烧录接口</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>stm32支持串口1冷启动烧录，和stc单片机烧录方式有点类似</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025063751190.png-bugs_blog\" alt=\"image-20221025063751190\"></p>\n<p><strong>串口烧录条件</strong></p>\n<p><code>Boot0</code>接<code>VDD</code>     <code>Boot1</code>接<code>GND</code><br>串口连接 <code>PA9</code> <code>PA10</code> 两个端口。</p></blockquote>\n<h3 id=\"boot0-和-boot1连接\"><a href=\"#boot0-和-boot1连接\" class=\"headerlink\" title=\"boot0 和 boot1连接\"></a><font color=#FF0033 >boot0 和 boot1连接</font></h3><h4 id=\"单片机正常工作\"><a href=\"#单片机正常工作\" class=\"headerlink\" title=\"单片机正常工作\"></a><font color=#0000CC >单片机正常工作</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025064837265.png-bugs_blog\" alt=\"image-20221025064837265\"></p></blockquote>\n<h4 id=\"串口烧录的时候\"><a href=\"#串口烧录的时候\" class=\"headerlink\" title=\"串口烧录的时候\"></a><font color=#0000CC >串口烧录的时候</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025065202338.png-bugs_blog\" alt=\"image-20221025065202338\"></p></blockquote>\n<hr>\n<h3 id=\"程序烧录\"><a href=\"#程序烧录\" class=\"headerlink\" title=\"程序烧录\"></a><font color=#FF0033 >程序烧录</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>烧录工具</strong>\t\tST  Link</p>\n<p><strong>连线</strong></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025070435099.png-bugs_blog\" alt=\"image-20221025070435099\"></p></blockquote>\n<h2 id=\"点亮LED\"><a href=\"#点亮LED\" class=\"headerlink\" title=\"点亮LED\"></a><font color=#9400D3 >点亮LED</font></h2><h3 id=\"LED硬件原理图\"><a href=\"#LED硬件原理图\" class=\"headerlink\" title=\"LED硬件原理图\"></a><font color=#FF0033 >LED硬件原理图</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025080554746.png-bugs_blog\" alt=\"image-20221025080554746\"></p></blockquote>\n<h3 id=\"GPIO初始化\"><a href=\"#GPIO初始化\" class=\"headerlink\" title=\"GPIO初始化\"></a><font color=#FF0033 >GPIO初始化</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>实际上基本所有外设都需要初始化，然后才能使用</p></blockquote>\n<h4 id=\"GPIO配置流程\"><a href=\"#GPIO配置流程\" class=\"headerlink\" title=\"GPIO配置流程\"></a><font color=#0000CC >GPIO配置流程</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>打开GPIO对应的外设时钟</li>\n<li>初始化GPIO端口:Pin选择，速率，模式的配置</li>\n</ol>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025091940853.png-bugs_blog\" alt=\"image-20221025091940853\"></p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025092658013.png-bugs_blog\" alt=\"image-20221025092658013\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//LED  GPIO  配置</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">LED_GPIO_Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\t\n\t<span class=\"token comment\">//我们需要一个脚，那么就需要一个结构体</span>\n\tGPIO_InitTypeDef GPIO_InitStruct<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//没有配置前先开时钟(使它使能)</span>\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>LED1_GPIO_CLK <span class=\"token operator\">|</span> LED2_GPIO_CLK<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//然后向我们向结构体里面的成员添加我们的参数</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> LED1_GPIO_PIN <span class=\"token operator\">|</span> LED2_GPIO_PIN<span class=\"token punctuation\">;</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_Out_PP<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//我们用推挽输出</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//速度我们用最高的50M</span>\n\t\n\t<span class=\"token comment\">//配置好结构体后我们需要调用一个初始化函数把我们结构体里面的成员值写到我们GPIO对应的寄存器</span>\n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>LED1_GPIO_PORT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>GPIO_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>LED2_GPIO_PORT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>GPIO_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"GPIO口输入-—-外电检测\"><a href=\"#GPIO口输入-—-外电检测\" class=\"headerlink\" title=\"GPIO口输入  —  外电检测\"></a><font color=#9400D3 >GPIO口输入  —  外电检测</font></h2><h3 id=\"外电硬件原理图\"><a href=\"#外电硬件原理图\" class=\"headerlink\" title=\"外电硬件原理图\"></a><font color=#FF0033 >外电硬件原理图</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025110117973.png-bugs_blog\" alt=\"image-20221025110117973\"></p></blockquote>\n<h4 id=\"外电断开\"><a href=\"#外电断开\" class=\"headerlink\" title=\"外电断开\"></a><font color=#0000CC >外电断开</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>PB1通过下拉电阻R55接地，PB1输入低电平</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025111021371.png-bugs_blog\" alt=\"image-20221025111021371\"></p></blockquote>\n<h4 id=\"外电输出端口连接-5V供电\"><a href=\"#外电输出端口连接-5V供电\" class=\"headerlink\" title=\"外电输出端口连接    5V供电\"></a><font color=#0000CC >外电输出端口连接    5V供电</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>电阻分压原理</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025113254110.png-bugs_blog\" alt=\"image-20221025113254110\"></p></blockquote>\n<h4 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a><font color=#0000CC >结论</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果读取PB1的状态是低电平:外电断掉</p>\n<p>如果读取PB1的状态是高电平:外电连接</p></blockquote>\n<h3 id=\"程序功能实现-–-外电检测\"><a href=\"#程序功能实现-–-外电检测\" class=\"headerlink\" title=\"程序功能实现 – 外电检测\"></a><font color=#FF0033 >程序功能实现 – 外电检测</font></h3><h4 id=\"外电GPIO配置\"><a href=\"#外电GPIO配置\" class=\"headerlink\" title=\"外电GPIO配置\"></a><font color=#0000CC >外电GPIO配置</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221025203331121.png-bugs_blog\" alt=\"image-20221025203331121\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//外电检测  GPIO  配置</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Electric_Power_Detection_GPIO_Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\t\n\t<span class=\"token comment\">//我们需要一个脚，那么就需要一个结构体</span>\n\tGPIO_InitTypeDef GPIO_InitStruct<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//没有配置前先开时钟(使它使能)</span>\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>EPD_GPIO_CLK<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//然后向我们向结构体里面的成员添加我们的参数</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> EPD_GPIO_PIN<span class=\"token punctuation\">;</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_IN_FLOATING<span class=\"token punctuation\">;</span><span class=\"token comment\">//我们用浮空输出</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//速度我们用最高的50M</span>\n\t\n\t<span class=\"token comment\">//配置好结构体后我们需要调用一个初始化函数把我们结构体里面的成员值写到我们GPIO对应的寄存器</span>\n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>EPD_GPIO_PORT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>GPIO_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"定时器\"><a href=\"#定时器\" class=\"headerlink\" title=\"定时器\"></a><font color=#9400D3 >定时器</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>我们互联型f105芯片有高达10个定时器支持引脚重映射功能</strong></p>\n<ul>\n<li>高达4个16位定时器，每个定时器有多达4个通道，用于输入捕获&#x2F;输出比较&#x2F;PWM或脉冲计数和正交(增量)编码器输入</li>\n<li>1个16位马达控制PWM定时器，支持死区时间和紧急停止</li>\n<li>2个看门狗定时器(独立的和窗口型的)</li>\n<li>系统时间定时器：24位自减型计数器</li>\n<li>2个16位定时器用于驱动DAC</li>\n</ul></blockquote>\n<h3 id=\"定时器4的配置\"><a href=\"#定时器4的配置\" class=\"headerlink\" title=\"定时器4的配置\"></a><font color=#FF0033 >定时器4的配置</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>打开定时器时钟</li>\n<li>配置定时器参数，打开定时器</li>\n<li>配置定时器中断，并打开定时器中断功能</li>\n</ul>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221026034234914.png-bugs_blog\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//用到中断了，我们就需要配置中断优先级</span>\n<span class=\"token comment\">// 中断优先级配置</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">GENERAL_TIM_NVIC_Config</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    NVIC_InitTypeDef NVIC_InitStructure<span class=\"token punctuation\">;</span> \n    <span class=\"token comment\">// 设置中断组为0</span>\n    <span class=\"token function\">NVIC_PriorityGroupConfig</span><span class=\"token punctuation\">(</span>NVIC_PriorityGroup_0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token comment\">// 设置中断来源</span>\n    NVIC_InitStructure<span class=\"token punctuation\">.</span>NVIC_IRQChannel <span class=\"token operator\">=</span> GENERAL_TIM_IRQ <span class=\"token punctuation\">;</span>\t\n\t<span class=\"token comment\">// 设置主优先级为 1</span>\n    NVIC_InitStructure<span class=\"token punctuation\">.</span>NVIC_IRQChannelPreemptionPriority <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t \n\t<span class=\"token comment\">// 设置抢占优先级为 0</span>\n    NVIC_InitStructure<span class=\"token punctuation\">.</span>NVIC_IRQChannelSubPriority <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n    NVIC_InitStructure<span class=\"token punctuation\">.</span>NVIC_IRQChannelCmd <span class=\"token operator\">=</span> ENABLE<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">NVIC_Init</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>NVIC_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//通用定时器配置</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">GENERAL_TIM_Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 开启定时器时钟,即内部时钟CK_INT=72M</span>\n    <span class=\"token function\">GENERAL_TIM_APBxClock_FUN</span><span class=\"token punctuation\">(</span>GENERAL_TIM_CLK<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">/*--------------------时基结构体初始化-------------------------*/</span>\t\n    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 自动重装载寄存器的值，累计TIM_Period+1个频率后产生一个更新或者中断</span>\n\tTIM_TimeBaseStructure<span class=\"token punctuation\">.</span>TIM_Period<span class=\"token operator\">=</span>GENERAL_TIM_PERIOD<span class=\"token punctuation\">;</span>\t\n\t<span class=\"token comment\">// 驱动CNT计数器的时钟 = Fck_int/(psc+1)</span>\n\tTIM_TimeBaseStructure<span class=\"token punctuation\">.</span>TIM_Prescaler<span class=\"token operator\">=</span> GENERAL_TIM_PSC<span class=\"token punctuation\">;</span>\t\n\t<span class=\"token comment\">// 时钟分频因子 ，配置死区时间时需要用到</span>\n\tTIM_TimeBaseStructure<span class=\"token punctuation\">.</span>TIM_ClockDivision<span class=\"token operator\">=</span>TIM_CKD_DIV1<span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token comment\">// 计数器计数模式，设置为向上计数</span>\n\tTIM_TimeBaseStructure<span class=\"token punctuation\">.</span>TIM_CounterMode<span class=\"token operator\">=</span>TIM_CounterMode_Up<span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token comment\">// 重复计数器的值，没用到不用管</span>\n\tTIM_TimeBaseStructure<span class=\"token punctuation\">.</span>TIM_RepetitionCounter<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token comment\">// 初始化定时器</span>\n\t<span class=\"token function\">TIM_TimeBaseInit</span><span class=\"token punctuation\">(</span>GENERAL_TIM<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>TIM_TimeBaseStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token comment\">// 清除计数器状态标志位</span>\n    <span class=\"token function\">TIM_ClearFlag</span><span class=\"token punctuation\">(</span>GENERAL_TIM<span class=\"token punctuation\">,</span> TIM_FLAG_Update<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t  \n\t<span class=\"token comment\">// 开启计数器中断</span>\n    <span class=\"token function\">TIM_ITConfig</span><span class=\"token punctuation\">(</span>GENERAL_TIM<span class=\"token punctuation\">,</span>TIM_IT_Update<span class=\"token punctuation\">,</span>ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token comment\">// 使能计数器</span>\n    <span class=\"token function\">TIM_Cmd</span><span class=\"token punctuation\">(</span>GENERAL_TIM<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"SPI接口初始化\"><a href=\"#SPI接口初始化\" class=\"headerlink\" title=\"SPI接口初始化\"></a><font color=#9400D3 >SPI接口初始化</font></h2><h3 id=\"硬件原理图\"><a href=\"#硬件原理图\" class=\"headerlink\" title=\"硬件原理图\"></a><font color=#FF0033 >硬件原理图</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20221026042214738.png-bugs_blog\" alt=\"image-20221026042214738\"></p></blockquote>\n<h3 id=\"SPI通信原理\"><a href=\"#SPI通信原理\" class=\"headerlink\" title=\"SPI通信原理\"></a><font color=#FF0033 >SPI通信原理</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230218205921186.png-bugs_blog\" alt=\"image-20230218205921186\"></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230218205859859.png-bugs_blog\" alt=\"image-20230218205859859\"></p>\n<p>SCK:决定数据的速率<br>数据：1高电平0低电平</p></blockquote>\n<h3 id=\"SPI的四种通讯模式\"><a href=\"#SPI的四种通讯模式\" class=\"headerlink\" title=\"SPI的四种通讯模式:\"></a><font color=#FF0033 ><strong>SPI的四种通讯模式:</strong></font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>见老主机文章 </p>\n<p><strong>数据传输方向：</strong></p>\n<p><strong>高位在前：MSB</strong></p>\n<p><strong>低位在前:   LSB</strong></p>\n<p><strong>SPI的单线 和双线 模式</strong></p>\n<p>单线：一般用于OLED屏幕单向通讯</p>\n<p>双向：一般用于芯片之间的双向通讯</p>\n<p><strong>一般情况下，我们不用刻意去学习四种模式的具体细节，一般芯片资料里面都会告诉你芯片支持的模式：</strong></p></blockquote>\n<h3 id=\"SPI2的初始化\"><a href=\"#SPI2的初始化\" class=\"headerlink\" title=\"SPI2的初始化\"></a><font color=#FF0033 ><strong>SPI2的初始化</strong></font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>SPI2接口初始化流程：</strong></p>\n<p>​                ● 定义SPI通讯的端口</p>\n<p>​                ● 打开相关时钟</p>\n<p>​                ● 初始化SPI2相关的GPIO口</p>\n<p>​                ● 初始化SPI2相关参数。</p>\n<p>​                ● 片选CS初始化  拉高</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230218204853902.png-bugs_blog\" alt=\"image-20230218204853902\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//spi2配置</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hal_SPI2_Config</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//创建两个结构体  spi和gpio的</span>\n\tSPI_InitTypeDef  SPI_InitStruct<span class=\"token punctuation\">;</span>\n\tGPIO_InitTypeDef GPIO_InitStruct<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//开GPIOB和SPI2,复用口的时钟</span>\n\t<span class=\"token function\">RCC_APB1PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB1Periph_SPI2<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB2Periph_GPIOB\n\t\t\t\t\t\t  <span class=\"token operator\">|</span>RCC_APB2Periph_AFIO<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token comment\">//配置spi2的结构体   sck时钟线，MISO，MOSI数据线</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span>  FLASH_SLK_PIN \n\t\t\t\t\t\t\t  <span class=\"token operator\">|</span> FLASH_SPI2_MOSI_PIN\n\t\t\t\t\t\t\t  <span class=\"token operator\">|</span> FLASH_SPI2_MISO_PIN<span class=\"token punctuation\">;</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//复用推挽输出意味着是模拟spi</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_AF_PP<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//上面配置好了先写进去，因为下面好要用</span>\n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>FLASH_PORT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>GPIO_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//SPI2 NSS 通过这根线控制flash</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> FLASH_SPI2_CS_PIN<span class=\"token punctuation\">;</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//用推挽输出</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_Out_PP<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//配置好结构体后我们需要调用一个初始化函数把我们结构体里面的成员值写到我们GPIO对应的寄存器</span>\n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>FLASH_PORT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>GPIO_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//空闲的时候片选线先拉高</span>\n\t<span class=\"token comment\">//GPIO_SetBits(FLASH_SPI2_CS_PORT,FLASH_SPI2_CS_PIN);</span>\n\t<span class=\"token comment\">//配置SPI2的一些参数</span>\n\t<span class=\"token comment\">//flash是双向通信</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_Direction <span class=\"token operator\">=</span> SPI_Direction_2Lines_FullDuplex<span class=\"token punctuation\">;</span> \t<span class=\"token comment\">//SPI2设置为两线全双工</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_Mode <span class=\"token operator\">=</span> SPI_Mode_Master<span class=\"token punctuation\">;</span>\t                     \t<span class=\"token comment\">//设置SPI2为主模式，MCU主设备，flash从设备</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_DataSize <span class=\"token operator\">=</span> SPI_DataSize_8b<span class=\"token punctuation\">;</span>                 \t\t<span class=\"token comment\">//SPI发送接收8位帧结构</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_CPOL <span class=\"token operator\">=</span> SPI_CPOL_High<span class=\"token punctuation\">;</span>\t \t\t                <span class=\"token comment\">//串行时钟在不操作时，时钟为高电平</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_CPHA <span class=\"token operator\">=</span> SPI_CPHA_2Edge<span class=\"token punctuation\">;</span>\t\t                    <span class=\"token comment\">//第二个时钟沿开始采样数据，这里我们用模式3</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_NSS <span class=\"token operator\">=</span> SPI_NSS_Soft<span class=\"token punctuation\">;</span>\t\t\t                    <span class=\"token comment\">//NSS信号由软件（使用SSI位）管理</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_BaudRatePrescaler <span class=\"token operator\">=</span> SPI_BaudRatePrescaler_8<span class=\"token punctuation\">;</span> \t<span class=\"token comment\">//定义波特率预分频的值:波特率预分频值为8</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_FirstBit <span class=\"token operator\">=</span> SPI_FirstBit_MSB<span class=\"token punctuation\">;</span>\t\t\t\t        <span class=\"token comment\">//数据传输从MSB位开始</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_CRCPolynomial <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t<span class=\"token comment\">//CRC值计算的多项式</span>\n\t<span class=\"token comment\">//初始化把配置的成员加载进寄存器</span>\n\t<span class=\"token function\">SPI_Init</span><span class=\"token punctuation\">(</span>SPI2<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>SPI_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token function\">SPI_Cmd</span><span class=\"token punctuation\">(</span>SPI2<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\t\t\n\t<span class=\"token comment\">//空闲的时候片选线先拉高</span>\n\t<span class=\"token function\">hal_SPI2_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"25Q64-flash-片选操作\"><a href=\"#25Q64-flash-片选操作\" class=\"headerlink\" title=\"25Q64 (flash)片选操作\"></a><font color=#0000CC ><strong>25Q64 (flash)片选操作</strong></font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230218205220913.png-bugs_blog\" alt=\"image-20230218205220913\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//spi2驱动</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">hal_SPI2_Drive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> sta<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tsta\t<span class=\"token operator\">?</span> <span class=\"token function\">GPIO_SetBits</span><span class=\"token punctuation\">(</span>FLASH_SPI2_CS_PORT<span class=\"token punctuation\">,</span>FLASH_SPI2_CS_PIN<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">:</span> <span class=\"token function\">GPIO_ResetBits</span><span class=\"token punctuation\">(</span>FLASH_SPI2_CS_PORT<span class=\"token punctuation\">,</span>FLASH_SPI2_CS_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"SPI数据读写函数\"><a href=\"#SPI数据读写函数\" class=\"headerlink\" title=\"SPI数据读写函数\"></a><font color=#FF0033 ><strong>SPI数据读写函数</strong></font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>  <strong>SPI读写数据操作原理:</strong></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230218210246709.png-bugs_blog\" alt=\"image-20230218210246709\"></p>\n<p><strong>SPI 读写操作图示分析</strong></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230218210332191.png-bugs_blog\" alt=\"image-20230218210332191\"></p></blockquote>\n<h4 id=\"SPI2读写一个字节\"><a href=\"#SPI2读写一个字节\" class=\"headerlink\" title=\"SPI2读写一个字节\"></a><font color=#0000CC >SPI2读写一个字节</font></h4><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//SPIx 读写一个字节</span>\n<span class=\"token comment\">//返回值:读取到的字节</span>\n<span class=\"token class-name\">uint8_t</span> <span class=\"token function\">hal_spi2ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> TxData<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\t\t\n\t<span class=\"token class-name\">uint8_t</span> retry<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token comment\">// 等待接收标志，确保数据有返回</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">SPI_I2S_GetFlagStatus</span><span class=\"token punctuation\">(</span>SPI2<span class=\"token punctuation\">,</span>SPI_I2S_FLAG_TXE<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>RESET<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//防止死在这个循环里面我们短暂的延时</span>\n\t\t<span class=\"token comment\">//超时就是没读到</span>\n\t\tretry<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>retry<span class=\"token operator\">></span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\t\n\t<span class=\"token function\">SPI_I2S_SendData</span><span class=\"token punctuation\">(</span>SPI2<span class=\"token punctuation\">,</span>TxData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\tretry<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//等待发送区空\t</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">SPI_I2S_GetFlagStatus</span><span class=\"token punctuation\">(</span>SPI2<span class=\"token punctuation\">,</span>SPI_I2S_FLAG_RXNE<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>RESET<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tretry<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>retry<span class=\"token operator\">></span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\t \n\t<span class=\"token comment\">// 读取一个字节的数据，返回读取的值</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">SPI_I2S_ReceiveData</span><span class=\"token punctuation\">(</span>SPI2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//SPI2->DR;         \t\t    </span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"W25Q64-芯片简单介绍\"><a href=\"#W25Q64-芯片简单介绍\" class=\"headerlink\" title=\"W25Q64 芯片简单介绍\"></a><font color=#9400D3 >W25Q64 芯片简单介绍</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230218230557071.png-bugs_blog\" alt=\"image-20230218230557071\"></p>\n<p><strong>操作指令集</strong></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230218234832079.png-bugs_blog\" alt=\"image-20230218234832079\"></p></blockquote>\n<h3 id=\"获取芯片ID函数\"><a href=\"#获取芯片ID函数\" class=\"headerlink\" title=\"获取芯片ID函数\"></a><font color=#FF0033 >获取芯片ID函数</font></h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//读取芯片ID W25X64的ID:0XEF16</span>\n<span class=\"token class-name\">uint16_t</span> <span class=\"token function\">mt_flashReadID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">uint16_t</span> Temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token comment\">//片选拉低工作</span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\n\t<span class=\"token comment\">//发送读取ID命令\t</span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//地址全写0</span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t    \n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t    \n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\n\t<span class=\"token comment\">//读到第一个字节需要向左移八位，</span>\n\t<span class=\"token comment\">//因为这个是制造商ID，在高八位</span>\n\tTemp<span class=\"token operator\">|=</span><span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token comment\">//再次读到的字节是设备ID这个是低八位</span>\n\tTemp<span class=\"token operator\">|=</span><span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t \n\t<span class=\"token comment\">//然后片选拉高，使空闲</span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\t\t    \n\t<span class=\"token keyword\">return</span> Temp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"编写flash初始化代码，并调用读芯片ID函数。验证SPI通讯\"><a href=\"#编写flash初始化代码，并调用读芯片ID函数。验证SPI通讯\" class=\"headerlink\" title=\"编写flash初始化代码，并调用读芯片ID函数。验证SPI通讯\"></a><font color=#FF0033 >编写flash初始化代码，并调用读芯片ID函数。验证SPI通讯</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230219005038371.png-bugs_blog\" alt=\"image-20230219005038371\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//w25q64初始化</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashInit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//product 产品ID</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> produid<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">hal_SPI2_Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\n \tproduid <span class=\"token operator\">=</span> <span class=\"token function\">mt_flashReadID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"25Q64数据的读操作\"><a href=\"#25Q64数据的读操作\" class=\"headerlink\" title=\"25Q64数据的读操作\"></a><font color=#FF0033 >25Q64数据的读操作</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230219132724959.png-bugs_blog\" alt=\"image-20230219132724959\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">\n<span class=\"token comment\">//W25Q64读操作</span>\n<span class=\"token comment\">//pBuffer-读取数据存储地址,ReadAddr-Flash地址(这个地址有效的是24位),NumByteToRead-读取字节数</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashRead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> pBuffer<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint32_t</span> ReadAddr<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint16_t</span> NumByteToRead<span class=\"token punctuation\">)</span>   \n<span class=\"token punctuation\">&#123;</span> \n\t<span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> pBuff<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">uint16_t</span> i<span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">;</span>  \n\t<span class=\"token class-name\">uint32_t</span> RdAddr<span class=\"token punctuation\">;</span>\n\tRdAddr <span class=\"token operator\">=</span> ReadAddr<span class=\"token punctuation\">;</span>\n\tnum <span class=\"token operator\">=</span> NumByteToRead<span class=\"token punctuation\">;</span>\n\tpBuff <span class=\"token operator\">=</span> pBuffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//使能器件   </span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token comment\">//发送读取命令   03h\t</span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x03</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         \n\t<span class=\"token comment\">//00 12 34 56H</span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>RdAddr<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//发送24bit地址    </span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>RdAddr<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span>RdAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>num<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span> \n\t\t<span class=\"token comment\">//循环读数  </span>\n\t\tpBuff<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">//取消片选  </span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                \t      \n<span class=\"token punctuation\">&#125;</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"25Q64数据的页写操作\"><a href=\"#25Q64数据的页写操作\" class=\"headerlink\" title=\"25Q64数据的页写操作\"></a><font color=#FF0033 >25Q64数据的页写操作</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230219151530296.png-bugs_blog\" alt=\"image-20230219151530296\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//SPI_FLASH写使能\t</span>\n<span class=\"token comment\">//将WEL置位   </span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashWriteEnable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>   \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//使能器件  </span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     \n\t<span class=\"token comment\">//发送写使能  0x06\t</span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span>W25X_WriteEnable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     \n\t<span class=\"token comment\">//取消片选     \t</span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                           \t      \n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token comment\">//SPI在一页(0~65535)内写入少于256个字节的数据</span>\n<span class=\"token comment\">//在指定地址开始写入最大256字节的数据</span>\n<span class=\"token comment\">//pBuffer:数据存储区</span>\n<span class=\"token comment\">//WriteAddr:开始写入的地址(24bit)</span>\n<span class=\"token comment\">//NumByteToWrite:要写入的字节数(最大256),该数不应该超过该页的剩余字节数!!!\t </span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashWritePage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> pBuffer<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint32_t</span> WriteAddr<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint16_t</span> NumByteToWrite<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> pBuff<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">uint16_t</span> i<span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">;</span>  \n\t<span class=\"token class-name\">uint32_t</span> wAddr<span class=\"token punctuation\">;</span>\n\tpBuff <span class=\"token operator\">=</span> pBuffer<span class=\"token punctuation\">;</span>\n\twAddr <span class=\"token operator\">=</span> WriteAddr<span class=\"token punctuation\">;</span>\n\tnum <span class=\"token operator\">=</span> NumByteToWrite<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//写使能</span>\n\t<span class=\"token function\">mt_flashWriteEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 \n\t<span class=\"token comment\">//使能器件   </span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     \n\t<span class=\"token comment\">//发送写页命令  \t</span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span>W25X_PageProgram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token comment\">//发送24bit地址    </span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wAddr<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wAddr<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span>wAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>num<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t  <span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span>pBuff<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//循环写数  </span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token function\">mt_flashWaitBusy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//等待写入结束</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//读取SPI_FLASH的状态寄存器</span>\n<span class=\"token comment\">//BIT7  6   5   4   3   2   1    0</span>\n<span class=\"token comment\">//SPR   RV  TB BP2 BP1 BP0 WEL   </span>\n<span class=\"token comment\">//SPR:默认0,状态寄存器保护位,配合WP使用</span>\n<span class=\"token comment\">//TB,BP2,BP1,BP0:FLASH区域写保护设置</span>\n<span class=\"token comment\">//WEL:写使能锁定</span>\n<span class=\"token comment\">//BUSY:忙标记位(1,忙;0,空闲)</span>\n<span class=\"token comment\">//默认:0x00</span>\n<span class=\"token class-name\">uint8_t</span> <span class=\"token function\">mt_flashReadSR</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>   \n<span class=\"token punctuation\">&#123;</span>  \n\t<span class=\"token class-name\">uint8_t</span> byte<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token comment\">//使能器件  </span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n\t<span class=\"token comment\">//发送读取状态寄存器命令 \t我们使用的是读状态寄存器1</span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span>W25X_ReadStatusReg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token comment\">//读取一个字节  </span>\n\tbyte<span class=\"token operator\">=</span><span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token comment\">//取消片选   </span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                               \n\t<span class=\"token keyword\">return</span> byte<span class=\"token punctuation\">;</span>   \n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token comment\">//等待空闲</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashWaitBusy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>   \n<span class=\"token punctuation\">&#123;</span>   \n\t<span class=\"token comment\">// 等待BUSY位清空</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">mt_flashReadSR</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0x01</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n<span class=\"token punctuation\">&#125;</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"25Q64扇区写操作-4096\"><a href=\"#25Q64扇区写操作-4096\" class=\"headerlink\" title=\"25Q64扇区写操作   4096\"></a><font color=#FF0033 >25Q64扇区写操作   4096</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>虽然我们可以页写，但是我们最多也就可以写256个，所以我们需要会换页，也就是扇区写入</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230220162010148.png-bugs_blog\" alt=\"image-20230220162010148\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//FLASH 扇区写入操作</span>\n<span class=\"token comment\">//必须确保所写的地址范围内的数据全部为0XFF,否则在非0XFF处写入的数据将失败!</span>\n<span class=\"token comment\">//具有自动换页功能 </span>\n<span class=\"token comment\">//在指定地址开始写入指定长度的数据,但是要确保地址不越界!</span>\n<span class=\"token comment\">//pBuffer:数据存储区</span>\n<span class=\"token comment\">//WriteAddr:开始写入的地址(24bit)</span>\n<span class=\"token comment\">//NumByteToWrite:要写入的字节数(最大65535)</span>\n<span class=\"token comment\">//CHECK OK</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashWrite_Sector</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> pBuffer<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint32_t</span> WriteAddr<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint16_t</span> NumByteToWrite<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span> \t\t\t \t\t \n\t<span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> pBuff<span class=\"token punctuation\">;</span>\t \t\t\t\t<span class=\"token comment\">//数据地址指针\t</span>\n\t<span class=\"token class-name\">uint16_t</span>  WriteRemainByte<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//写剩余字节</span>\n\t<span class=\"token comment\">//uint8_t  RemainPage;\t\t\t//剩余页</span>\n\t<span class=\"token class-name\">uint16_t</span>  PageRemainByte<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//页剩余字节</span>\n\t<span class=\"token class-name\">uint32_t</span> wAddr<span class=\"token punctuation\">;</span>  \t\t\t\t<span class=\"token comment\">//写的起始地址</span>\n\tpBuff <span class=\"token operator\">=</span> pBuffer<span class=\"token punctuation\">;</span>\n\twAddr <span class=\"token operator\">=</span> WriteAddr<span class=\"token punctuation\">;</span>\n\tWriteRemainByte <span class=\"token operator\">=</span> NumByteToWrite<span class=\"token punctuation\">;</span>\n\tPageRemainByte <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token operator\">-</span>wAddr<span class=\"token operator\">%</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//单页剩余的字节数\t</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>WriteRemainByte<span class=\"token operator\">&lt;=</span>PageRemainByte<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//要写的字节不超过单页剩余的字节，说明我们不需要换页      </span>\n        PageRemainByte <span class=\"token operator\">=</span> WriteRemainByte<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\t\n\t\t<span class=\"token comment\">//先把开始的页填满</span>\n\t\t<span class=\"token comment\">//这时候写剩余字节就是我们总共写的</span>\n        <span class=\"token function\">mt_flashWritePage</span><span class=\"token punctuation\">(</span>pBuff<span class=\"token punctuation\">,</span>wAddr<span class=\"token punctuation\">,</span>WriteRemainByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>WriteRemainByte <span class=\"token operator\">==</span> PageRemainByte<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token comment\">//如果写剩余字节和页剩余字节相等，说明就是最后一页，可以退出了</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token comment\">//要是写入的字节数大于页剩余字节，说明需要换页写入</span>\n\t\t\t<span class=\"token comment\">//还剩多少个需要写入的</span>\n\t\t\tWriteRemainByte <span class=\"token operator\">-=</span> PageRemainByte<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//写地址也要变成下一页</span>\n\t\t\twAddr <span class=\"token operator\">+=</span> PageRemainByte<span class=\"token punctuation\">;</span>\n\t\t\tpBuff <span class=\"token operator\">+=</span> PageRemainByte<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>WriteRemainByte<span class=\"token operator\">></span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token comment\">//这是新的页剩余字节</span>\n\t\t\t\tPageRemainByte <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\t\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\tPageRemainByte <span class=\"token operator\">=</span> WriteRemainByte<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\t\t\t\t\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\t  \n<span class=\"token punctuation\">&#125;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"25Q64任意写操作\"><a href=\"#25Q64任意写操作\" class=\"headerlink\" title=\"25Q64任意写操作\"></a><font color=#FF0033 >25Q64任意写操作</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230220180318576.png-bugs_blog\" alt=\"image-20230220180318576\"></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230220181032956.png-bugs_blog\" alt=\"image-20230220181032956\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//块写预先操作</span>\n<span class=\"token comment\">//pBuffer:数据存储区</span>\n<span class=\"token comment\">//SectorPos:起始的扇区</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashWrite_Block_Advance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> pBuffer<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint32_t</span> SectorPos<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//读出整个扇区的内容</span>\n\t<span class=\"token function\">mt_flashRead</span><span class=\"token punctuation\">(</span>pBuffer<span class=\"token punctuation\">,</span>SectorPos<span class=\"token operator\">*</span><span class=\"token number\">4096</span><span class=\"token punctuation\">,</span><span class=\"token number\">4096</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//擦除这个扇区</span>\n\t<span class=\"token function\">mt_flashEraseSector</span><span class=\"token punctuation\">(</span>SectorPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//写SPI FLASH  块写入，实际上就是任意写了</span>\n<span class=\"token comment\">//在指定地址开始写入指定长度的数据</span>\n<span class=\"token comment\">//该函数带擦除操作!</span>\n<span class=\"token comment\">//pBuffer:数据存储区</span>\n<span class=\"token comment\">//WriteAddr:开始写入的地址(24bit)</span>\n<span class=\"token comment\">//NumByteToWrite:要写入的字节数(最大256)  </span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashWrite_Block</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> pBuffer<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint32_t</span> WriteAddr<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint16_t</span> NumByteToWrite<span class=\"token punctuation\">)</span>   \n<span class=\"token punctuation\">&#123;</span> \n\t<span class=\"token class-name\">uint8_t</span>  SPI_FLASH_BUF<span class=\"token punctuation\">[</span><span class=\"token number\">4096</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//uint8_t testaa[200];</span>\n\t<span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> pBuff<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">uint32_t</span> SectorPos<span class=\"token punctuation\">;</span>        \t\t <span class=\"token comment\">//需要写的起始的扇区</span>\n\t<span class=\"token class-name\">uint16_t</span> SectorOffsetAddress<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//写入到额起始扇区的 偏移地址</span>\n\t<span class=\"token class-name\">uint16_t</span> SectorRemainByte<span class=\"token punctuation\">;</span>\t     <span class=\"token comment\">//扇区剩余字节数 </span>\n\t<span class=\"token class-name\">uint16_t</span>  WriteRemainByte<span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//写剩余字节</span>\n\t<span class=\"token class-name\">uint32_t</span> wAddr<span class=\"token punctuation\">;</span>\n\tpBuff <span class=\"token operator\">=</span> pBuffer<span class=\"token punctuation\">;</span>\n\twAddr <span class=\"token operator\">=</span> WriteAddr<span class=\"token punctuation\">;</span>\n\tWriteRemainByte<span class=\"token operator\">=</span> NumByteToWrite<span class=\"token punctuation\">;</span> \n\tSectorOffsetAddress <span class=\"token operator\">=</span> wAddr<span class=\"token operator\">%</span><span class=\"token number\">4096</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//在扇区内的偏移</span>\n\tSectorRemainByte <span class=\"token operator\">=</span> <span class=\"token number\">4096</span><span class=\"token operator\">-</span>SectorOffsetAddress<span class=\"token punctuation\">;</span><span class=\"token comment\">//扇区剩余空间大小    </span>\n\t<span class=\"token comment\">//num  是需要写入数据的格式   如果需要写入的数据的个数小于本扇区剩余的个数</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>WriteRemainByte <span class=\"token operator\">&lt;</span> SectorRemainByte<span class=\"token punctuation\">)</span> \n        <span class=\"token comment\">//扇区剩余字节就是写剩余字节</span>\n        SectorRemainByte <span class=\"token operator\">=</span> WriteRemainByte<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>      \n\t\t<span class=\"token comment\">//块写前操作</span>\n\t\t<span class=\"token function\">mt_flashWrite_Block_Advance</span><span class=\"token punctuation\">(</span>SPI_FLASH_BUF<span class=\"token punctuation\">,</span>SectorPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//写之前将我们的数据放到自定义的flash缓冲区中,memmove比memcpy好</span>\n\t\t<span class=\"token function\">memmove</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>SPI_FLASH_BUF<span class=\"token punctuation\">[</span>SectorOffsetAddress<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>pBuff<span class=\"token punctuation\">,</span>SectorRemainByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//这时候再写入，写缓冲区内的内容\t\t</span>\n\t\t<span class=\"token function\">mt_flashWrite_Sector</span><span class=\"token punctuation\">(</span>SPI_FLASH_BUF<span class=\"token punctuation\">,</span>SectorPos<span class=\"token operator\">*</span><span class=\"token number\">4096</span><span class=\"token punctuation\">,</span><span class=\"token number\">4096</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>WriteRemainByte <span class=\"token operator\">==</span> SectorRemainByte<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n            SectorPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">//扇区号加一</span>\n            SectorOffsetAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">//偏移地址变0</span>\n            pBuff <span class=\"token operator\">+=</span> SectorRemainByte<span class=\"token punctuation\">;</span>          <span class=\"token comment\">//数据偏移</span>\n            wAddr <span class=\"token operator\">+=</span> SectorRemainByte<span class=\"token punctuation\">;</span>          <span class=\"token comment\">//写地址偏移</span>\n            WriteRemainByte <span class=\"token operator\">-=</span> SectorRemainByte<span class=\"token punctuation\">;</span><span class=\"token comment\">//写剩余字节减少 </span>\n\t\t\t<span class=\"token comment\">//要是写入的字节数大于扇区剩余字节，说明需要换扇区写入</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>WriteRemainByte<span class=\"token operator\">></span><span class=\"token number\">4096</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token comment\">//这是新的扇区剩余字节</span>\n\t\t\t\tSectorRemainByte <span class=\"token operator\">=</span> <span class=\"token number\">4096</span><span class=\"token punctuation\">;</span>\t\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\tSectorRemainByte <span class=\"token operator\">=</span> WriteRemainByte<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\t\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\t \n<span class=\"token punctuation\">&#125;</span>\n <span class=\"token comment\">//擦除一个扇区</span>\n<span class=\"token comment\">//Dst_Addr:扇区地址 0~511 for w25x16</span>\n<span class=\"token comment\">//擦除一个扇区的最少时间:45ms,最大300ms</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashEraseSector</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span> Dst_Addr<span class=\"token punctuation\">)</span>   \n<span class=\"token punctuation\">&#123;</span>   \n\t<span class=\"token class-name\">uint32_t</span> DstAddr<span class=\"token punctuation\">;</span>\n\tDstAddr <span class=\"token operator\">=</span> Dst_Addr<span class=\"token punctuation\">;</span>\n\tDstAddr<span class=\"token operator\">*=</span><span class=\"token number\">4096</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">mt_flashWriteEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                   \n\t<span class=\"token function\">mt_flashWaitBusy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token comment\">//使能器件 \t</span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                              \n\t<span class=\"token comment\">//发送扇区擦除指令 </span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span>W25X_SectorErase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      \n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DstAddr<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//发送24bit地址    </span>\n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DstAddr<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token function\">hal_SPI2_ReadWriteByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token punctuation\">)</span>DstAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token comment\">//取消片选 </span>\n\t<span class=\"token function\">hal_SPI2_CS_Drive</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                              \n\t<span class=\"token comment\">//等待擦除完成\t</span>\n\t<span class=\"token function\">mt_flashWaitBusy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \t\t\t\t   \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"25Q64测试验证函数\"><a href=\"#25Q64测试验证函数\" class=\"headerlink\" title=\"25Q64测试验证函数\"></a><font color=#FF0033 >25Q64测试验证函数</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230221010019935.png-bugs_blog\" alt=\"image-20230221010019935\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> falshtest<span class=\"token punctuation\">[</span><span class=\"token number\">6000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flash_test</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> falshdadrx<span class=\"token punctuation\">;</span>\n\tfalshdadrx <span class=\"token operator\">=</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span> <span class=\"token number\">6000</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tfalshtest<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\t\t\n\t<span class=\"token function\">mt_flashWrite_Block</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>falshtest<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>falshdadrx<span class=\"token punctuation\">,</span><span class=\"token number\">6000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span> <span class=\"token number\">6000</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tfalshtest<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">&#125;</span>\t\n  <span class=\"token function\">mt_flashRead</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>falshtest<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>falshdadrx<span class=\"token punctuation\">,</span><span class=\"token number\">6000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//w25q64初始化</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_flashInit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//product 产品ID</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> produid<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">hal_SPI2_Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\n \tproduid <span class=\"token operator\">=</span> <span class=\"token function\">mt_flashReadID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">mt_flash_test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"SPI3-DMA外设驱动-TFTLCD初始化\"><a href=\"#SPI3-DMA外设驱动-TFTLCD初始化\" class=\"headerlink\" title=\"SPI3+DMA外设驱动-TFTLCD初始化\"></a><font color=#9400D3 >SPI3+DMA外设驱动-TFTLCD初始化</font></h2><h3 id=\"TFTLCD液晶屏硬件电路分析\"><a href=\"#TFTLCD液晶屏硬件电路分析\" class=\"headerlink\" title=\"TFTLCD液晶屏硬件电路分析\"></a><font color=#FF0033 >TFTLCD液晶屏硬件电路分析</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230221122453441.png-bugs_blog\" alt=\"image-20230221122453441\"></p>\n<p><strong>电路设计说明</strong></p>\n<p>​                ● 硬件电路设计是参考液晶屏官方给的参考资料设计的。基本是按照芯片资料照抄过来即可</p>\n<p>​                ● 为了提高液晶屏的刷屏效率，我们选择了SPI3接口。采用单线模式</p>\n<p>​                ● DIO   CLK 必须固定连接 MOSI  SCK 外，其他管脚可以连任意IO口</p></blockquote>\n<h3 id=\"实际开发过程中，外部电路驱动的实现方法\"><a href=\"#实际开发过程中，外部电路驱动的实现方法\" class=\"headerlink\" title=\"实际开发过程中，外部电路驱动的实现方法\"></a><font color=#FF0033 >实际开发过程中，外部电路驱动的实现方法</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>实际产品开发过程中，很多的驱动程序，我们一般都是通过复制粘贴的方法来实现的，</p>\n<p>因为在实际产品开发过程中，我们的目标是实现功能，把产品尽快的开发出来，只要能实现功能，过程并不重要。黑猫白猫，抓住老鼠就是好猫，就像上节课，在产品开发的时候，我实现功能可能就只有几分钟，复制粘贴，然后简单的测试一下功能，功能OK，驱动开发完成.</p>\n<p>当然做的产品多了，难免会出现一些问题，如果出现问题了，我们就需要深入的去研究一些原因。为了方便我们程序的升级和维护，我们一般都好选择好的程序框架…</p>\n<p>在这里，还原一下TFTLCD液晶屏我的驱动的过程：《这个过程就一致在围绕着怎么实现功能，怎么修改可以满足我们的要求。（我们不会抱着屏幕的芯片手册，先研究芯片书册）》</p>\n<p>第一步：找厂家要TFTLCD液晶屏的驱动代码 和硬件设计参考图纸。</p>\n<p>第二步：按照厂家提供的硬件图纸，确保硬件电路设计OK</p>\n<p>第三步：参考官方提供的代码，按照我们结合我们硬件移植代码，修改GPIO端口和硬件相关的接口，包括写寄存器，和写数据函数</p>\n<p>第四步：测试效果。 功能实现。  可以让屏幕显示红色</p>\n<p>第五步：进一步测试，发现刷屏的速度有点慢。   不能满足要求， 优化底层驱动接口，讲之前的模拟端口修改成SPI通讯，SPI有增加了DMA功能。</p>\n<p>第六步：测试通过，功能完成OK</p></blockquote>\n<h3 id=\"TFTLCD液晶屏初始化\"><a href=\"#TFTLCD液晶屏初始化\" class=\"headerlink\" title=\"TFTLCD液晶屏初始化\"></a><font color=#FF0033 >TFTLCD液晶屏初始化</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230221143035242.png-bugs_blog\" alt=\"image-20230221143035242\"></p>\n<p><strong>DMA介绍：</strong></p>\n<p>直接存储器存取(DMA)用来提供在外设和存储器之间或者存储器和存储器之间的高速数据传 输。无须CPU干预，数据可以通过DMA快速地移动，这就节省了CPU的资源来做其他操作。 两个DMA控制器有12个通道(DMA1有7个通道，DMA2有5个通道)，每个通道专门用来管理来自 于一个或多个外设对存储器访问的请求。还有一个仲裁器来协调各个DMA请求的优先权</p>\n<p>&#x3D;&#x3D;DMA1 各个通道对应表&#x3D;&#x3D;:</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230221143821464.png-bugs_blog\" alt=\"image-20230221143821464\"></p>\n<p>&#x3D;&#x3D;DMA2 各个通道对应表&#x3D;&#x3D;:</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230221144150460.png-bugs_blog\" alt=\"image-20230221144150460\"></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230221154452630.png-bugs_blog\" alt=\"image-20230221154452630\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//TFTLCD配置</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">hal_TFTLCD_Config</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//创建三个结构体  spi，gpio和dma的</span>\n\tSPI_InitTypeDef   SPI_InitStruct<span class=\"token punctuation\">;</span>\n\tGPIO_InitTypeDef  GPIO_InitStruct<span class=\"token punctuation\">;</span>\n\tDMA_InitTypeDef\t  DMA_InitStruct<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//开GPIOA,B,C和SPI3,DMA,复用口的时钟</span>\n\t<span class=\"token function\">RCC_APB1PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB1Periph_SPI2<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB2Periph_GPIOB\n\t\t\t\t\t\t  <span class=\"token operator\">|</span>RCC_APB2Periph_AFIO<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//引脚重映射，PB4,PB5</span>\n\t<span class=\"token function\">GPIO_PinRemapConfig</span><span class=\"token punctuation\">(</span>GPIO_Remap_SWJ_JTAGDisable<span class=\"token punctuation\">,</span>ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//RES-PA15</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> LCD_RES_PIN<span class=\"token punctuation\">;</span>\t \n \tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_Out_PP<span class=\"token punctuation\">;</span> \t\t <span class=\"token comment\">//推挽输出</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//速度50MHz</span>\n \t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>LCD_RES_PORT<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t  \t\t <span class=\"token comment\">//初始化GPIOA</span>\n\t <span class=\"token comment\">//LCD脚配置的时候都拉高是为了后面更好的初始化，处在一个稳定态</span>\n\t<span class=\"token function\">GPIO_SetBits</span><span class=\"token punctuation\">(</span>LCD_RES_PORT<span class=\"token punctuation\">,</span>LCD_RES_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n\t\n\t<span class=\"token comment\">//CMD-PB4</span>\n\t<span class=\"token comment\">//CS-PB6</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> LCD_CS_PIN<span class=\"token operator\">|</span>LCD_CMD_PIN<span class=\"token punctuation\">;</span>\t \n \tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_Out_PP<span class=\"token punctuation\">;</span> \t\t <span class=\"token comment\">//推挽输出</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//速度50MHz</span>\n \t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>LCD_PORTB<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t  \t\t\t <span class=\"token comment\">//初始化GPIOB\t</span>\n\t<span class=\"token function\">GPIO_SetBits</span><span class=\"token punctuation\">(</span>LCD_PORTB<span class=\"token punctuation\">,</span>LCD_CS_PIN<span class=\"token operator\">|</span>LCD_CMD_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//EN-PC10</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> LCD_EN_PIN<span class=\"token punctuation\">;</span>\t \n \tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_Out_PP<span class=\"token punctuation\">;</span> \t\t <span class=\"token comment\">//推挽输出</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//速度50MHz</span>\n \t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>LCD_PORTC<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t  \t\t\t <span class=\"token comment\">//初始化GPIOC\t\t</span>\n\t<span class=\"token function\">GPIO_ResetBits</span><span class=\"token punctuation\">(</span>LCD_PORTC<span class=\"token punctuation\">,</span>LCD_EN_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//CLK-PB3</span>\n\t<span class=\"token comment\">//MOSI-PB5</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span>  LCD_SLK_PIN <span class=\"token operator\">|</span>LCD_DO_PIN<span class=\"token punctuation\">;</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//速度50MHz</span>\n\tGPIO_InitStruct<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_AF_PP<span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//复用推挽输出\t</span>\n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>GPIOB<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\n\t<span class=\"token comment\">//SPI3配置</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_Direction <span class=\"token operator\">=</span> SPI_Direction_1Line_Tx<span class=\"token punctuation\">;</span> \t\t\t<span class=\"token comment\">//SPI1设置为单线</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_Mode <span class=\"token operator\">=</span> SPI_Mode_Master<span class=\"token punctuation\">;</span>\t                    <span class=\"token comment\">//设置SPI1为主模式</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_DataSize <span class=\"token operator\">=</span> SPI_DataSize_8b<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">//SPI发送接收8位帧结构</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_CPOL <span class=\"token operator\">=</span> SPI_CPOL_High<span class=\"token punctuation\">;</span>\t \t\t            <span class=\"token comment\">//串行时钟在不操作时，时钟为高电平</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_CPHA <span class=\"token operator\">=</span> SPI_CPHA_2Edge<span class=\"token punctuation\">;</span>\t\t                <span class=\"token comment\">//第二个时钟沿开始采样数据</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_NSS <span class=\"token operator\">=</span> SPI_NSS_Soft<span class=\"token punctuation\">;</span>\t\t\t                <span class=\"token comment\">//NSS信号由软件（使用SSI位）管理</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_BaudRatePrescaler <span class=\"token operator\">=</span> SPI_BaudRatePrescaler_2<span class=\"token punctuation\">;</span> <span class=\"token comment\">//定义波特率预分频的值:波特率预分频值为2</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_FirstBit <span class=\"token operator\">=</span> SPI_FirstBit_MSB<span class=\"token punctuation\">;</span>\t\t\t\t    <span class=\"token comment\">//数据传输从MSB位开始</span>\n\tSPI_InitStruct<span class=\"token punctuation\">.</span>SPI_CRCPolynomial <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t    <span class=\"token comment\">//CRC值计算的多项式</span>\n\t<span class=\"token function\">SPI_Init</span><span class=\"token punctuation\">(</span>SPI3<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>SPI_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//DMA2配置</span>\n\t<span class=\"token function\">DMA_DeInit</span><span class=\"token punctuation\">(</span>DMA2_Channel2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\t\t\t\t\t\t\t\t\t\t <span class=\"token comment\">//因为SPI3发送是在DMA2通道2上面</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_PeripheralBaseAddr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>u32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>SPI3<span class=\"token operator\">-></span>DR<span class=\"token punctuation\">;</span> \t\t\t <span class=\"token comment\">//数据传输目标地址</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_DIR <span class=\"token operator\">=</span> DMA_DIR_PeripheralDST<span class=\"token punctuation\">;</span> \t\t\t\t\t <span class=\"token comment\">//数据传输方向，从内存读取发送到外设</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_BufferSize <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>           \t\t\t\t\t <span class=\"token comment\">//发送Buff数据大小</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_PeripheralInc <span class=\"token operator\">=</span> DMA_PeripheralInc_Disable<span class=\"token punctuation\">;</span> \t\t <span class=\"token comment\">//设置外设地址是否递增</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_MemoryInc <span class=\"token operator\">=</span> DMA_MemoryInc_Enable<span class=\"token punctuation\">;</span>  \t\t\t\t <span class=\"token comment\">//设置内存地址是否递增</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_PeripheralDataSize <span class=\"token operator\">=</span> DMA_PeripheralDataSize_Byte<span class=\"token punctuation\">;</span> <span class=\"token comment\">//外设数据宽度为8位</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_MemoryDataSize <span class=\"token operator\">=</span> DMA_MemoryDataSize_Byte<span class=\"token punctuation\">;</span> \t\t <span class=\"token comment\">//内存数据宽度为8位\t</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_Mode <span class=\"token operator\">=</span>   DMA_Mode_Normal<span class=\"token punctuation\">;</span>                         <span class=\"token comment\">//普通缓存模式</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_Priority <span class=\"token operator\">=</span> DMA_Priority_Medium<span class=\"token punctuation\">;</span>                   <span class=\"token comment\">//高优先级</span>\n\tDMA_InitStruct<span class=\"token punctuation\">.</span>DMA_M2M <span class=\"token operator\">=</span> DMA_M2M_Disable<span class=\"token punctuation\">;</span>            \t\t\t\t <span class=\"token comment\">//禁止DMA2个内存相互访问</span>\n\t<span class=\"token function\">DMA_Init</span><span class=\"token punctuation\">(</span>DMA2_Channel2<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>DMA_InitStruct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \t\t\t\t\t <span class=\"token comment\">//初始化DMA,SPI在DMA1的通道2</span>\n\t\n\t<span class=\"token comment\">//使能SPI2 DMA的发送功能</span>\n\t<span class=\"token function\">SPI_I2S_DMACmd</span><span class=\"token punctuation\">(</span>SPI3<span class=\"token punctuation\">,</span>SPI_I2S_DMAReq_Tx<span class=\"token punctuation\">,</span>ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token comment\">//使能SPI3</span>\n\t<span class=\"token function\">SPI_Cmd</span><span class=\"token punctuation\">(</span>SPI3<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"SPI3-DMA-数据发送函数\"><a href=\"#SPI3-DMA-数据发送函数\" class=\"headerlink\" title=\"SPI3 DMA 数据发送函数\"></a><font color=#FF0033 >SPI3 DMA 数据发送函数</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>直接搜一个直接用，我们目的是产品，不是搞那些寄存器</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//SPI3 DMA 数据发送函数</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">DMA_SPI3_TX</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> buffer<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint16_t</span> len<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tDMA2<span class=\"token operator\">-></span>IFCR <span class=\"token operator\">|=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xf</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \t\t\t\t <span class=\"token comment\">//清除通道2上面所有的标志位</span>\n\tDMA2_Channel2<span class=\"token operator\">-></span>CNDTR<span class=\"token operator\">=</span>len<span class=\"token punctuation\">;</span> \t\t \t\t <span class=\"token comment\">//设置要传输的数据长度</span>\n\tDMA2_Channel2<span class=\"token operator\">-></span>CMAR<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>u32<span class=\"token punctuation\">)</span>buffer<span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//设置RAM缓冲区地址</span>\n\tDMA2_Channel2<span class=\"token operator\">-></span>CCR<span class=\"token operator\">|=</span><span class=\"token number\">0x1</span><span class=\"token punctuation\">;</span>   \t\t\t\t <span class=\"token comment\">//启动DMA</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>DMA2<span class=\"token operator\">-></span>ISR<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> \t\t <span class=\"token comment\">//等待数据数据传输完成</span>\n\tDMA2_Channel2<span class=\"token operator\">-></span>CCR <span class=\"token operator\">&amp;=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span><span class=\"token punctuation\">)</span><span class=\"token operator\">~</span><span class=\"token number\">0x1</span><span class=\"token punctuation\">;</span>\t <span class=\"token comment\">//关闭DMA</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//LCD写总线</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_Writ_Bus</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> dat<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span>\t\n\t<span class=\"token comment\">//片选拉低后才能发送数据</span>\n\t<span class=\"token function\">LCD_CS_Clr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//发送一个字节</span>\n\t<span class=\"token function\">DMA_SPI3_TX</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>dat<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其他LCD脚位控制函数\"><a href=\"#其他LCD脚位控制函数\" class=\"headerlink\" title=\"其他LCD脚位控制函数\"></a><font color=#FF0033 >其他LCD脚位控制函数</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230221162915073.png-bugs_blog\" alt=\"image-20230221162915073\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//LCD开</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">hal_LCD_Display_on</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">LCD_EN_Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//LCD关</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">hal_LCD_Display_off</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">LCD_EN_Clr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//LCD复位脚拉高</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">hal_oled_RestH</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">LCD_RES_Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//LCD复位脚拉低</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">hal_oled_RestL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">LCD_RES_Clr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"LCD指令和数据发送函数\"><a href=\"#LCD指令和数据发送函数\" class=\"headerlink\" title=\"LCD指令和数据发送函数\"></a><font color=#FF0033 >LCD指令和数据发送函数</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230221163323679.png-bugs_blog\" alt=\"image-20230221163323679\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/******************************************************************************\n      函数说明：LCD写入数据\n      入口数据：dat 写入的数据\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> dat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">LCD_Writ_Bus</span><span class=\"token punctuation\">(</span>dat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/******************************************************************************\n      函数说明：LCD写入数据\n      入口数据：dat 写入的数据\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint16_t</span> dat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">uint8_t</span> d<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\td<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dat<span class=\"token operator\">>></span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\td<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dat<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">DMA_SPI3_TX</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/******************************************************************************\n      函数说明：LCD写入命令\n      入口数据：dat 写入的命令\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> dat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">LCD_DC_Clr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//写命令</span>\n\t<span class=\"token function\">LCD_Writ_Bus</span><span class=\"token punctuation\">(</span>dat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_DC_Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//写数据</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"LCD屏幕初始化和LCD填充函数\"><a href=\"#LCD屏幕初始化和LCD填充函数\" class=\"headerlink\" title=\"LCD屏幕初始化和LCD填充函数\"></a><font color=#FF0033 >LCD屏幕初始化和LCD填充函数</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>新建mt_tftlcd.c 和mt_tftlcd.h 文件，保存并加载到mt工作组。</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hal_tftlcd_Delay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span> de<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">uint8_t</span> ColorBuf<span class=\"token punctuation\">[</span><span class=\"token number\">640</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//LCD初始化直接用官方的稍微修改修改就行</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_LCD_Init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">hal_TFTLCD_Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//首先LCD配置</span>\n\t<span class=\"token function\">hal_tftlcd_Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">hal_LCD_ResetL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \t\t\t\t<span class=\"token comment\">//复位拉低</span>\n\t<span class=\"token function\">hal_tftlcd_Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">hal_LCD_ResetH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//复位拉高</span>\n\t<span class=\"token function\">hal_tftlcd_Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//************* Start Initial Sequence **********//</span>\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\t\t\t<span class=\"token comment\">//Sleep out </span>\n\t<span class=\"token function\">hal_tftlcd_Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     \n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//MX, MY, RGB mode Memory Access Control</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>USE_HORIZONTAL<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>USE_HORIZONTAL<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xC0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>USE_HORIZONTAL<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xA0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//65k mode </span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x05</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\n\t<span class=\"token comment\">//--------------------------------ST7789S Frame rate setting-------------------------</span>\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xb2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xb7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x35</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//---------------------------------ST7789S Power setting-----------------------------</span>\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xbb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x35</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xca</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x08</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x55</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xd0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//--------------------------------ST7789S gamma setting------------------------------</span>\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xe0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xd0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x06</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x09</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x55</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x08</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xe1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xd0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x06</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x09</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x29</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x54</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_DATA8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x29</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//Display on </span>\n\t<span class=\"token function\">hal_tftlcd_Delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">hal_LCD_Display_on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//LCD亮</span>\n\t\n\t<span class=\"token function\">LCD_Fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>LCD_W<span class=\"token punctuation\">,</span>LCD_H<span class=\"token punctuation\">,</span>WHITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/******************************************************************************\n      函数说明：设置起始和结束地址\n      入口数据：x1,x2 设置列的起始和结束地址\n                y1,y2 设置行的起始和结束地址\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_Address_Set</span><span class=\"token punctuation\">(</span>u16 x1<span class=\"token punctuation\">,</span>u16 y1<span class=\"token punctuation\">,</span>u16 x2<span class=\"token punctuation\">,</span>u16 y2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>USE_HORIZONTAL<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//列地址设置</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>x1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>x2<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//行地址设置</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>y1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>y2<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//储存器写</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>USE_HORIZONTAL<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//列地址设置</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>x1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>x2<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//行地址设置</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>y1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>y2<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//储存器写</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>USE_HORIZONTAL<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//列地址设置</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>x1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>x2<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//行地址设置</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>y1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>y2<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//储存器写</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//列地址设置</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>x1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>x2<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//行地址设置</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>y1<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>y2<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_WR_REG</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x2c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//储存器写</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/******************************************************************************\n      函数说明：在指定区域填充颜色\n      入口数据：xsta,ysta   起始坐标\n                xend,yend   终止坐标\n\t\t\t\tcolor       要填充的颜色\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_Fill</span><span class=\"token punctuation\">(</span>u16 xsta<span class=\"token punctuation\">,</span>u16 ysta<span class=\"token punctuation\">,</span>u16 xend<span class=\"token punctuation\">,</span>u16 yend<span class=\"token punctuation\">,</span>u16 color<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>          \n\tu16 i<span class=\"token punctuation\">;</span> \n\t<span class=\"token function\">LCD_Address_Set</span><span class=\"token punctuation\">(</span>xsta<span class=\"token punctuation\">,</span>ysta<span class=\"token punctuation\">,</span>xend<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>yend<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置显示范围</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>xend<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tColorBuf<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token operator\">>></span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t\tColorBuf<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>ysta<span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>yend<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\t\t\n\t\t<span class=\"token function\">DMA_SPI3_TX</span><span class=\"token punctuation\">(</span>ColorBuf<span class=\"token punctuation\">,</span>xend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\t\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//LCD专用延时</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hal_tftlcd_Delay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span> de<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>de<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>mt_tftlcd.h</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">mt_tftlcd</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">mt_tftlcd</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">USE_HORIZONTAL</span> <span class=\"token expression\"><span class=\"token number\">3</span>  </span><span class=\"token comment\">//设置横屏或者竖屏显示 0或1为竖屏 2或3为横屏</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">USE_HORIZONTAL<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token operator\">||</span>USE_HORIZONTAL<span class=\"token operator\">==</span><span class=\"token number\">1</span></span></span>\n\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LCD_W</span> <span class=\"token expression\"><span class=\"token number\">240</span></span></span>\n\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LCD_H</span> <span class=\"token expression\"><span class=\"token number\">320</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LCD_W</span> <span class=\"token expression\"><span class=\"token number\">320</span></span></span>\n\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LCD_H</span> <span class=\"token expression\"><span class=\"token number\">240</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\">//画笔颜色</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WHITE</span>         \t <span class=\"token expression\"><span class=\"token number\">0xFFFF</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BLACK</span>         \t <span class=\"token expression\"><span class=\"token number\">0x0000</span>\t  </span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BLUE</span>           \t <span class=\"token expression\"><span class=\"token number\">0x001F</span>  </span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BRED</span>             <span class=\"token expression\"><span class=\"token number\">0XF81F</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">GRED</span> \t\t\t <span class=\"token expression\"><span class=\"token number\">0XFFE0</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">GBLUE</span>\t\t\t <span class=\"token expression\"><span class=\"token number\">0X07FF</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RED</span>           \t <span class=\"token expression\"><span class=\"token number\">0xF800</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MAGENTA</span>       \t <span class=\"token expression\"><span class=\"token number\">0xF81F</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">GREEN</span>         \t <span class=\"token expression\"><span class=\"token number\">0x07E0</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CYAN</span>          \t <span class=\"token expression\"><span class=\"token number\">0x7FFF</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">YELLOW</span>        \t <span class=\"token expression\"><span class=\"token number\">0xFFE0</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BROWN</span> \t\t\t <span class=\"token expression\"><span class=\"token number\">0XBC40</span> </span><span class=\"token comment\">//棕色</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BRRED</span> \t\t\t <span class=\"token expression\"><span class=\"token number\">0XFC07</span> </span><span class=\"token comment\">//棕红色</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">GRAY</span>  \t\t\t <span class=\"token expression\"><span class=\"token number\">0X8430</span> </span><span class=\"token comment\">//灰色</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DARKBLUE</span>      \t <span class=\"token expression\"><span class=\"token number\">0X01CF</span>\t</span><span class=\"token comment\">//深蓝色</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LIGHTBLUE</span>      \t <span class=\"token expression\"><span class=\"token number\">0X7D7C</span>\t</span><span class=\"token comment\">//浅蓝色  </span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">GRAYBLUE</span>       \t <span class=\"token expression\"><span class=\"token number\">0X5458</span> </span><span class=\"token comment\">//灰蓝色</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LIGHTGREEN</span>     \t <span class=\"token expression\"><span class=\"token number\">0X841F</span> </span><span class=\"token comment\">//浅绿色</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LGRAY</span> \t\t\t <span class=\"token expression\"><span class=\"token number\">0XC618</span> </span><span class=\"token comment\">//浅灰色(PANNEL),窗体背景色</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LGRAYBLUE</span>        <span class=\"token expression\"><span class=\"token number\">0XA651</span> </span><span class=\"token comment\">//浅灰蓝色(中间层颜色)</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LBBLUE</span>           <span class=\"token expression\"><span class=\"token number\">0X2B12</span> </span><span class=\"token comment\">//浅棕蓝色(选择条目的反色)</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"all.h\"</span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_Fill</span><span class=\"token punctuation\">(</span>u16 xsta<span class=\"token punctuation\">,</span>u16 ysta<span class=\"token punctuation\">,</span>u16 xend<span class=\"token punctuation\">,</span>u16 yend<span class=\"token punctuation\">,</span>u16 color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mt_LCD_Init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">/*mt_tftlcd*/</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"TFTLCD数字-字母的显示\"><a href=\"#TFTLCD数字-字母的显示\" class=\"headerlink\" title=\"TFTLCD数字+字母的显示\"></a><font color=#9400D3 >TFTLCD数字+字母的显示</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>直接移植官方的</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">\n<span class=\"token comment\">/******************************************************************************\n      函数说明：在指定位置画点\n      入口数据：x,y 画点坐标\n                color 点的颜色\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_DrawPoint</span><span class=\"token punctuation\">(</span>u16 x<span class=\"token punctuation\">,</span>u16 y<span class=\"token punctuation\">,</span>u16 color<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">LCD_Address_Set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置光标位置 </span>\n\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token comment\">/******************************************************************************\n      函数说明：显示单个字符\n      入口数据：x,y显示坐标\n                num 要显示的字符\n                fc 字的颜色\n                bc 字的背景色\n                sizey 字号\n                mode:  0非叠加模式  1叠加模式\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_ShowChar</span><span class=\"token punctuation\">(</span>u16 x<span class=\"token punctuation\">,</span>u16 y<span class=\"token punctuation\">,</span>u8 num<span class=\"token punctuation\">,</span>u16 fc<span class=\"token punctuation\">,</span>u16 bc<span class=\"token punctuation\">,</span>u8 sizey<span class=\"token punctuation\">,</span>u8 mode<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tu8 temp<span class=\"token punctuation\">,</span>sizex<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">,</span>m<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tu16 i<span class=\"token punctuation\">,</span>TypefaceNum<span class=\"token punctuation\">;</span><span class=\"token comment\">//一个字符所占字节大小</span>\n\tu16 x0<span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span>\n\tsizex<span class=\"token operator\">=</span>sizey<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\tTypefaceNum<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>sizex<span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sizex<span class=\"token operator\">%</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>sizey<span class=\"token punctuation\">;</span>\n\tnum<span class=\"token operator\">=</span>num<span class=\"token operator\">-</span><span class=\"token char\">' '</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//得到偏移后的值</span>\n\t<span class=\"token function\">LCD_Address_Set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span>sizex<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">+</span>sizey<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//设置光标位置 </span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>TypefaceNum<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span> \n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sizey<span class=\"token operator\">==</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>temp<span class=\"token operator\">=</span>ascii_1206<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t       <span class=\"token comment\">//调用6x12字体</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sizey<span class=\"token operator\">==</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>temp<span class=\"token operator\">=</span>ascii_1608<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//调用8x16字体</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sizey<span class=\"token operator\">==</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span>temp<span class=\"token operator\">=</span>ascii_2412<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//调用12x24字体</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sizey<span class=\"token operator\">==</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>temp<span class=\"token operator\">=</span>ascii_3216<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//调用16x32字体</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>t<span class=\"token operator\">&lt;</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mode<span class=\"token punctuation\">)</span><span class=\"token comment\">//非叠加模式</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x01</span><span class=\"token operator\">&lt;&lt;</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>bc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tm<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">%</span>sizex<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tm<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">else</span><span class=\"token comment\">//叠加模式</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x01</span><span class=\"token operator\">&lt;&lt;</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token function\">LCD_DrawPoint</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>fc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//画一个点</span>\n\t\t\t\tx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">-</span>x0<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>sizex<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tx<span class=\"token operator\">=</span>x0<span class=\"token punctuation\">;</span>\n\t\t\t\t\ty<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>   \t \t  \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/******************************************************************************\n      函数说明：显示字符串\n      入口数据：x,y显示坐标\n                *p 要显示的字符串\n                fc 字的颜色\n                bc 字的背景色\n                sizey 字号\n                mode:  0非叠加模式  1叠加模式\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_ShowString</span><span class=\"token punctuation\">(</span>u16 x<span class=\"token punctuation\">,</span>u16 y<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> u8 <span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span>u16 fc<span class=\"token punctuation\">,</span>u16 bc<span class=\"token punctuation\">,</span>u8 sizey<span class=\"token punctuation\">,</span>u8 mode<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>         \n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>p<span class=\"token operator\">!=</span><span class=\"token char\">'\\0'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>       \n\t\t<span class=\"token function\">LCD_ShowChar</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span>fc<span class=\"token punctuation\">,</span>bc<span class=\"token punctuation\">,</span>sizey<span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tx<span class=\"token operator\">+=</span>sizey<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\tp<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数字和字母取模演示。增加4824-字体\"><a href=\"#数字和字母取模演示。增加4824-字体\" class=\"headerlink\" title=\"数字和字母取模演示。增加4824 字体\"></a><font color=#FF0033 >数字和字母取模演示。增加4824 字体</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>①汉字取模。</p>\n<p>②按照以下的格式配置,并生产 ACSII 对应的字母。</p>\n<p>③将转行的字模 复制到我们代码中，并命名为。<code>extern const unsigned char ascii_4824 [] [144]</code>;</p>\n<p>④在void LCD_ShowChar 函数中增加4824 字节的函数</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/******************************************************************************\n      函数说明：显示单个字符\n      入口数据：x,y显示坐标\n                num 要显示的字符\n                fc 字的颜色\n                bc 字的背景色\n                sizey 字号\n                mode:  0非叠加模式  1叠加模式\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_ShowChar</span><span class=\"token punctuation\">(</span>u16 x<span class=\"token punctuation\">,</span>u16 y<span class=\"token punctuation\">,</span>u8 num<span class=\"token punctuation\">,</span>u16 fc<span class=\"token punctuation\">,</span>u16 bc<span class=\"token punctuation\">,</span>u8 sizey<span class=\"token punctuation\">,</span>u8 mode<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tu8 temp<span class=\"token punctuation\">,</span>sizex<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">,</span>m<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tu16 i<span class=\"token punctuation\">,</span>TypefaceNum<span class=\"token punctuation\">;</span><span class=\"token comment\">//一个字符所占字节大小</span>\n\tu16 x0<span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span>\n\tsizex<span class=\"token operator\">=</span>sizey<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\tTypefaceNum<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>sizex<span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sizex<span class=\"token operator\">%</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>sizey<span class=\"token punctuation\">;</span>\n\tnum<span class=\"token operator\">=</span>num<span class=\"token operator\">-</span><span class=\"token char\">' '</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//得到偏移后的值</span>\n\t<span class=\"token function\">LCD_Address_Set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span>sizex<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">+</span>sizey<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//设置光标位置 </span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>TypefaceNum<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span> \n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sizey<span class=\"token operator\">==</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>temp<span class=\"token operator\">=</span>ascii_1206<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t       <span class=\"token comment\">//调用6x12字体</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sizey<span class=\"token operator\">==</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>temp<span class=\"token operator\">=</span>ascii_1608<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//调用8x16字体</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sizey<span class=\"token operator\">==</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span>temp<span class=\"token operator\">=</span>ascii_2412<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//调用12x24字体</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sizey<span class=\"token operator\">==</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>temp<span class=\"token operator\">=</span>ascii_3216<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//调用16x32字体</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sizey<span class=\"token operator\">==</span><span class=\"token number\">48</span><span class=\"token punctuation\">)</span>temp<span class=\"token operator\">=</span>ascii_4824<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//调用16x32字体\t</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>t<span class=\"token operator\">&lt;</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mode<span class=\"token punctuation\">)</span><span class=\"token comment\">//非叠加模式</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x01</span><span class=\"token operator\">&lt;&lt;</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>bc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tm<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">%</span>sizex<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tm<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">else</span><span class=\"token comment\">//叠加模式</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x01</span><span class=\"token operator\">&lt;&lt;</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token function\">LCD_DrawPoint</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>fc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//画一个点</span>\n\t\t\t\tx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">-</span>x0<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>sizex<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tx<span class=\"token operator\">=</span>x0<span class=\"token punctuation\">;</span>\n\t\t\t\t\ty<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>   \t \t  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"TFTLCD液晶屏图标的显示\"><a href=\"#TFTLCD液晶屏图标的显示\" class=\"headerlink\" title=\"TFTLCD液晶屏图标的显示\"></a><font color=#9400D3 >TFTLCD液晶屏图标的显示</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>第一步:准备图标</p>\n<p>第二步: 图标取模,将图片用字符来表示</p>\n<p>第三步: 液晶显示，将字符转换成LCD屏幕显示</p></blockquote>\n<h3 id=\"图片的准备\"><a href=\"#图片的准备\" class=\"headerlink\" title=\"图片的准备\"></a><font color=#FF0033 >图片的准备</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230222172838232.png\" alt=\"image-20230222172838232\"></p>\n<p>去网站找对应的图标</p>\n<p>但是找到的都是最后一帧的，所以找到后自己通过画板去还原以前的帧</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230222173444663.png\" alt=\"image-20230222173444663\"></p></blockquote>\n<h3 id=\"通过枚举定义我们需要显示的图标\"><a href=\"#通过枚举定义我们需要显示的图标\" class=\"headerlink\" title=\"通过枚举定义我们需要显示的图标\"></a><font color=#FF0033 >通过枚举定义我们需要显示的图标</font></h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//图标枚举</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">icon</span>\n<span class=\"token punctuation\">&#123;</span>\n\tICON_32X32_WIFI_S1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//WIFI信号等级0</span>\n\tICON_32X32_WIFI_S2<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//WIFI信号等级1</span>\n\tICON_32X32_WIFI_S3<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//WIFI信号等级2\t</span>\n\tICON_32X32_WIFI_S4<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//WIFI信号等级3</span>\n\t\n    ICON_32X32_GSM_NOCARD<span class=\"token punctuation\">,</span>\t <span class=\"token comment\">//GSM没卡</span>\n\n\tICON_32X32_GSM_S1<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//手机信号等级1</span>\n\tICON_32X32_GSM_S2<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//手机信号等级2</span>\n\tICON_32X32_GSM_S3<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//手机信号等级3\t</span>\n\tICON_32X32_GSM_S4<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//手机信号等级4</span>\n\n\tICON_32X32_BAT_LEVEL0<span class=\"token punctuation\">,</span>\t <span class=\"token comment\">//电池电量0</span>\n\tICON_32X32_BAT_LEVEL1<span class=\"token punctuation\">,</span>\t <span class=\"token comment\">//电池电量1\t</span>\n\tICON_32X32_BAT_LEVEL2<span class=\"token punctuation\">,</span>\t <span class=\"token comment\">//电池电量2\t</span>\n\tICON_32X32_BAT_LEVEL3<span class=\"token punctuation\">,</span>   <span class=\"token comment\">//电池电量3</span>\n\tICON_32X32_BAT_LEVEL4<span class=\"token punctuation\">,</span>\t <span class=\"token comment\">//电池电量4</span>\n\tICON_32X32_BAT_LEVEL5<span class=\"token punctuation\">,</span>\t <span class=\"token comment\">//电池电量5</span>\n\n\tICON_32X32_ACLINK<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//电源通</span>\n\tICON_32X32_ACBREAK<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//电源断开</span>\n\n\tICON_32X32_SERVER<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//显示服务器</span>\n\n\tICON_32X32_CLEAR<span class=\"token punctuation\">,</span>\t\t <span class=\"token comment\">//不显示任何图标</span>\n\n\tICON_32X32_SUM\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"显示程序\"><a href=\"#显示程序\" class=\"headerlink\" title=\"显示程序\"></a><font color=#FF0033 >显示程序</font></h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/******************************************************************************\n      函数说明：小图标显示  32*32   \n      入口数据：x,y\t\t\t\t\t 显示坐标       \n                icon \t\t \t\t 要显示的图标\n                icon_color   \t\t 图标的颜色\n                icon_back_color \t 图标背景色\n\t\t\t\tmode \t\t\t\t 0非叠加模式  1叠加模式\n      返回值：  无\n******************************************************************************/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">LCD_ShowPicture32PixFont</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint16_t</span> x<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint16_t</span> y<span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token class-name\">uint8_t</span> icon<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint16_t</span> icon_color<span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token class-name\">uint16_t</span> icon_back_color<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint8_t</span> mode<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">uint8_t</span> temp<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">uint16_t</span> i<span class=\"token punctuation\">,</span>icon_size<span class=\"token punctuation\">;</span>\t\t\t  <span class=\"token comment\">//一个图标所占字节大小\t</span>\n\ticon_size<span class=\"token operator\">=</span><span class=\"token number\">128</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">LCD_Address_Set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">+</span><span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//设置光标位置    </span>\n\t\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>icon_size<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span> \n\t\ttemp<span class=\"token operator\">=</span>ICON<span class=\"token punctuation\">[</span>icon<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">///0X70  0111 0000 </span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>t<span class=\"token operator\">&lt;</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mode<span class=\"token punctuation\">)</span><span class=\"token comment\">//非叠加模式</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span> \n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token operator\">>></span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>icon_color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">else</span> \n\t\t\t\t\t<span class=\"token function\">LCD_WR_DATA</span><span class=\"token punctuation\">(</span>icon_back_color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>   \t \t  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"TFTLCD液晶屏桌面显示功能的布局\"><a href=\"#TFTLCD液晶屏桌面显示功能的布局\" class=\"headerlink\" title=\"TFTLCD液晶屏桌面显示功能的布局\"></a><font color=#FF0033 >TFTLCD液晶屏桌面显示功能的布局</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>图标坐标</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COOR_ICON_AC_X</span>   \t\t<span class=\"token expression\"><span class=\"token number\">1</span>\t\t</span><span class=\"token comment\">//电源坐标</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COOR_ICON_AC_Y</span>   \t\t<span class=\"token expression\"><span class=\"token number\">1</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COOR_ICON_BAT_X</span>   \t\t<span class=\"token expression\"><span class=\"token number\">33</span>\t\t</span><span class=\"token comment\">//电量坐标</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COOR_ICON_BAT_Y</span>  \t\t<span class=\"token expression\"><span class=\"token number\">1</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">COOR_ICON_SERVER_X</span>   \t<span class=\"token expression\"><span class=\"token number\">210</span>\t\t</span><span class=\"token comment\">//服务坐标</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">COOR_ICON_SERVER_Y</span>    \t<span class=\"token expression\"><span class=\"token number\">1</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">COOR_ICON_WIFI_X</span>   \t<span class=\"token expression\"><span class=\"token number\">250</span>\t\t</span><span class=\"token comment\">//WIFI坐标</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">COOR_ICON_WIFI_Y</span>   \t<span class=\"token expression\"><span class=\"token number\">1</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">COOR_ICON_SIM_X</span>   \t\t<span class=\"token expression\"><span class=\"token number\">282</span>\t\t</span><span class=\"token comment\">//手机卡坐标</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">COOR_ICON_SIM_Y</span>   \t\t<span class=\"token expression\"><span class=\"token number\">1</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">COOR_ICON_SYSTEMODE_X</span>  <span class=\"token expression\"><span class=\"token number\">70</span>\t\t</span><span class=\"token comment\">//系统模式坐标</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">COOR_ICON_SYSTEMODE_Y</span>  <span class=\"token expression\"><span class=\"token number\">100</span></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"SIGCHLD信号\"><a href=\"#SIGCHLD信号\" class=\"headerlink\" title=\"SIGCHLD信号\"></a><font color=#9400D3 >SIGCHLD信号</font></h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a><font color=#FF0033 >三级标题</font></h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a><font color=#0000CC >四级标题</font></h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a><font color=#FF00FF >五级标题</font></h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a><font color=#00CC00 >六级标题</font></h6>","feature":true,"text":"wifi&amp;4GSTM32单片机最小系统 单片机最小系统概念 单片机正常工作必不可少的电路，就是单片机的最小系统电路 STM32最小系统包括 电源，复位电路，时钟电路，烧录接口，boot0和boot1 电源 STM32单片机工作的电源范围:2.0-3.6V 一般都选择3.3...","link":"","photos":[],"count_time":{"symbolsCount":"32k","symbolsTime":"29 mins."},"categories":[{"name":"单片机","slug":"单片机","count":13,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":13,"path":"api/tags/STM32.json"},{"name":"主机","slug":"主机","count":13,"path":"api/tags/主机.json"},{"name":"4G","slug":"4G","count":1,"path":"api/tags/4G.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#wifi-amp-4G\"><span class=\"toc-text\">wifi&amp;4G</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#STM32%E5%8D%95%E7%89%87%E6%9C%BA%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">STM32单片机最小系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%B5%E6%BA%90\"><span class=\"toc-text\">电源</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#VDDA-VSSA%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">VDDA,VSSA说明</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E4%BD%8D%E7%94%B5%E8%B7%AF\"><span class=\"toc-text\">复位电路</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%92%9F%E7%94%B5%E8%B7%AF\"><span class=\"toc-text\">时钟电路</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%83%A7%E5%BD%95%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">烧录接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SWD%E7%83%A7%E5%BD%95%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">SWD烧录接口</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%B2%E5%8F%A3%E7%83%A7%E5%BD%95%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">串口烧录接口</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#boot0-%E5%92%8C-boot1%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">boot0 和 boot1连接</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%89%87%E6%9C%BA%E6%AD%A3%E5%B8%B8%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">单片机正常工作</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%B2%E5%8F%A3%E7%83%A7%E5%BD%95%E7%9A%84%E6%97%B6%E5%80%99\"><span class=\"toc-text\">串口烧录的时候</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E7%83%A7%E5%BD%95\"><span class=\"toc-text\">程序烧录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%82%B9%E4%BA%AELED\"><span class=\"toc-text\">点亮LED</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LED%E7%A1%AC%E4%BB%B6%E5%8E%9F%E7%90%86%E5%9B%BE\"><span class=\"toc-text\">LED硬件原理图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GPIO%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">GPIO初始化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#GPIO%E9%85%8D%E7%BD%AE%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">GPIO配置流程</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GPIO%E5%8F%A3%E8%BE%93%E5%85%A5-%E2%80%94-%E5%A4%96%E7%94%B5%E6%A3%80%E6%B5%8B\"><span class=\"toc-text\">GPIO口输入  —  外电检测</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%96%E7%94%B5%E7%A1%AC%E4%BB%B6%E5%8E%9F%E7%90%86%E5%9B%BE\"><span class=\"toc-text\">外电硬件原理图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%96%E7%94%B5%E6%96%AD%E5%BC%80\"><span class=\"toc-text\">外电断开</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%96%E7%94%B5%E8%BE%93%E5%87%BA%E7%AB%AF%E5%8F%A3%E8%BF%9E%E6%8E%A5-5V%E4%BE%9B%E7%94%B5\"><span class=\"toc-text\">外电输出端口连接    5V供电</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">结论</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0-%E2%80%93-%E5%A4%96%E7%94%B5%E6%A3%80%E6%B5%8B\"><span class=\"toc-text\">程序功能实现 – 外电检测</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%96%E7%94%B5GPIO%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">外电GPIO配置</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E6%97%B6%E5%99%A8\"><span class=\"toc-text\">定时器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E6%97%B6%E5%99%A84%E7%9A%84%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">定时器4的配置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SPI%E6%8E%A5%E5%8F%A3%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">SPI接口初始化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A1%AC%E4%BB%B6%E5%8E%9F%E7%90%86%E5%9B%BE\"><span class=\"toc-text\">硬件原理图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SPI%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">SPI通信原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SPI%E7%9A%84%E5%9B%9B%E7%A7%8D%E9%80%9A%E8%AE%AF%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">SPI的四种通讯模式:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SPI2%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">SPI2的初始化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#25Q64-flash-%E7%89%87%E9%80%89%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">25Q64 (flash)片选操作</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SPI%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%86%99%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">SPI数据读写函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SPI2%E8%AF%BB%E5%86%99%E4%B8%80%E4%B8%AA%E5%AD%97%E8%8A%82\"><span class=\"toc-text\">SPI2读写一个字节</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#W25Q64-%E8%8A%AF%E7%89%87%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">W25Q64 芯片简单介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E8%8A%AF%E7%89%87ID%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">获取芯片ID函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99flash%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%B9%B6%E8%B0%83%E7%94%A8%E8%AF%BB%E8%8A%AF%E7%89%87ID%E5%87%BD%E6%95%B0%E3%80%82%E9%AA%8C%E8%AF%81SPI%E9%80%9A%E8%AE%AF\"><span class=\"toc-text\">编写flash初始化代码，并调用读芯片ID函数。验证SPI通讯</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#25Q64%E6%95%B0%E6%8D%AE%E7%9A%84%E8%AF%BB%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">25Q64数据的读操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#25Q64%E6%95%B0%E6%8D%AE%E7%9A%84%E9%A1%B5%E5%86%99%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">25Q64数据的页写操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#25Q64%E6%89%87%E5%8C%BA%E5%86%99%E6%93%8D%E4%BD%9C-4096\"><span class=\"toc-text\">25Q64扇区写操作   4096</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#25Q64%E4%BB%BB%E6%84%8F%E5%86%99%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">25Q64任意写操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#25Q64%E6%B5%8B%E8%AF%95%E9%AA%8C%E8%AF%81%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">25Q64测试验证函数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SPI3-DMA%E5%A4%96%E8%AE%BE%E9%A9%B1%E5%8A%A8-TFTLCD%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">SPI3+DMA外设驱动-TFTLCD初始化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#TFTLCD%E6%B6%B2%E6%99%B6%E5%B1%8F%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF%E5%88%86%E6%9E%90\"><span class=\"toc-text\">TFTLCD液晶屏硬件电路分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%99%85%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E5%A4%96%E9%83%A8%E7%94%B5%E8%B7%AF%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">实际开发过程中，外部电路驱动的实现方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#TFTLCD%E6%B6%B2%E6%99%B6%E5%B1%8F%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">TFTLCD液晶屏初始化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SPI3-DMA-%E6%95%B0%E6%8D%AE%E5%8F%91%E9%80%81%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">SPI3 DMA 数据发送函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96LCD%E8%84%9A%E4%BD%8D%E6%8E%A7%E5%88%B6%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">其他LCD脚位控制函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LCD%E6%8C%87%E4%BB%A4%E5%92%8C%E6%95%B0%E6%8D%AE%E5%8F%91%E9%80%81%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">LCD指令和数据发送函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LCD%E5%B1%8F%E5%B9%95%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8CLCD%E5%A1%AB%E5%85%85%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">LCD屏幕初始化和LCD填充函数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TFTLCD%E6%95%B0%E5%AD%97-%E5%AD%97%E6%AF%8D%E7%9A%84%E6%98%BE%E7%A4%BA\"><span class=\"toc-text\">TFTLCD数字+字母的显示</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E5%92%8C%E5%AD%97%E6%AF%8D%E5%8F%96%E6%A8%A1%E6%BC%94%E7%A4%BA%E3%80%82%E5%A2%9E%E5%8A%A04824-%E5%AD%97%E4%BD%93\"><span class=\"toc-text\">数字和字母取模演示。增加4824 字体</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TFTLCD%E6%B6%B2%E6%99%B6%E5%B1%8F%E5%9B%BE%E6%A0%87%E7%9A%84%E6%98%BE%E7%A4%BA\"><span class=\"toc-text\">TFTLCD液晶屏图标的显示</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E7%89%87%E7%9A%84%E5%87%86%E5%A4%87\"><span class=\"toc-text\">图片的准备</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87%E6%9E%9A%E4%B8%BE%E5%AE%9A%E4%B9%89%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E6%98%BE%E7%A4%BA%E7%9A%84%E5%9B%BE%E6%A0%87\"><span class=\"toc-text\">通过枚举定义我们需要显示的图标</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%98%BE%E7%A4%BA%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">显示程序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#TFTLCD%E6%B6%B2%E6%99%B6%E5%B1%8F%E6%A1%8C%E9%9D%A2%E6%98%BE%E7%A4%BA%E5%8A%9F%E8%83%BD%E7%9A%84%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">TFTLCD液晶屏桌面显示功能的布局</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SIGCHLD%E4%BF%A1%E5%8F%B7\"><span class=\"toc-text\">SIGCHLD信号</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">三级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">四级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BA%94%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">五级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E5%85%AD%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">六级标题</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"独走繁华，花难入眼。哈哈","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"mapped":true,"prev_post":{"title":"计算机软件","uid":"ea5c65088673feada9e353a789756fec","slug":"逆向魔王/组原/4.虫壳组原 计算机软件","date":"2022-12-15T10:49:36.000Z","updated":"2023-02-17T07:48:04.282Z","comments":true,"path":"api/articles/逆向魔王/组原/4.虫壳组原 计算机软件.json","keywords":null,"cover":"https://cover.png","text":"组原多层次计算机系统 第0层不允许普通用户编写微指令，属于商业秘密。第1层机器语言指令集：是固化在处理器内部，执行移动、加法和乘法等操作，每条机器语言分成几条微指令执行。第2层操作系统：能够理解用户发出的诸如并执行程序、显示目录之类的交互命令。操作系统被翻译为机器码在第1层执行。...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"组原","slug":"组原","count":4,"path":"api/categories/组原.json"}],"tags":[{"name":"逆向","slug":"逆向","count":6,"path":"api/tags/逆向.json"},{"name":"组原","slug":"组原","count":4,"path":"api/tags/组原.json"}],"author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"独走繁华，花难入眼。哈哈","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"feature":true},"next_post":{"title":"Clion","uid":"1d7728b7cef53fff89d869e00a76e04b","slug":"汇编/Clion 一些操作","date":"2020-08-15T10:49:36.000Z","updated":"2023-01-23T12:07:49.004Z","comments":true,"path":"api/articles/汇编/Clion 一些操作.json","keywords":null,"cover":"https://cover.png","text":"Cliongdb编译生成可执行文件 反汇编main函数 带源码的反汇编函数 带机器码的反汇编函数 切换成intel指令格式 GDB默认汇编格式是AT&amp;T格式，windows用户会感觉很蛋疼，GDB很给力的支持切换成intel指令集。 切换intel格式的命令: set d...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"工具","slug":"工具","count":4,"path":"api/categories/工具.json"}],"tags":[{"name":"工具","slug":"工具","count":3,"path":"api/tags/工具.json"},{"name":"Clion","slug":"Clion","count":1,"path":"api/tags/Clion.json"}],"author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"独走繁华，花难入眼。哈哈","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"feature":true}}