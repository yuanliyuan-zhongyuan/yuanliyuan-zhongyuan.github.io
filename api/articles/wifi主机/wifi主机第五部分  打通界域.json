{"title":"WIFI主机-打通域界","uid":"cc1ca5f7b232d316a6eb483fac865b2d","slug":"wifi主机/wifi主机第五部分  打通界域","date":"2020-08-15T10:49:36.000Z","updated":"2023-01-23T11:54:34.466Z","comments":true,"path":"api/articles/wifi主机/wifi主机第五部分  打通界域.json","keywords":null,"cover":"https://cover.png","content":"<h1 id=\"WIFI主机\"><a href=\"#WIFI主机\" class=\"headerlink\" title=\"WIFI主机\"></a><font color=#996633 >WIFI主机</font></h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>现在才是产品阶段</p></blockquote>\n<h2 id=\"433M无线通讯的一些常识\"><a href=\"#433M无线通讯的一些常识\" class=\"headerlink\" title=\"433M无线通讯的一些常识\"></a><font color=#9400D3 >433M无线通讯的一些常识</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>我们这个主机是防盗报警主机，所以必须要配合周边传感器形成一道防御网络，比如说门磁传感器装在大门，开门后，门磁探测器触发然后通过433MHz频段的无线发送一组数据给主机，然后主机接收到就报警。</p>\n<p><strong>为什么要用无线</strong></p>\n<p>因为免去了布线的麻烦，但也伴随着一些问题，比如说同频干扰，安全性等，但是综合考虑还是无线的比较适用</p>\n<p><strong>为什么选用433M频率</strong></p>\n<p>常用频段有非常多种，315&#x2F;433&#x2F;868,2.4G，433M成本低廉，距离远，穿墙能力强，缺点就是传输速率小，通常只适合做一些无线数据量小的产品，比如说只需要传输几个字节的。而且数据传输也是透明的，数据容易被破解，安全性比较差。但是大多数环境下都能正常使用，也有一些用Lora做的，功耗更低，但成本高些</p></blockquote>\n<h2 id=\"无线接收模块简介\"><a href=\"#无线接收模块简介\" class=\"headerlink\" title=\"无线接收模块简介\"></a><font color=#9400D3 >无线接收模块简介</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>为什么要用433M无线接收模块</strong></p>\n<p>数据通过无线传输，如果是发送数据就需要把单片机输出的&#x3D;&#x3D;数字信号转换成电磁波&#x3D;&#x3D;进行传播</p>\n<p>如果是接收数据的话，就需要把这种&#x3D;&#x3D;电磁波转换成数字信号&#x3D;&#x3D;，而接收模块就是帮你把&#x3D;&#x3D;电磁波转换成数字信号&#x3D;&#x3D;输出，用很高的性价比简<br>化你的硬件电路，然后用单片机来把&#x3D;&#x3D;数字信号解码还原真实的数据&#x3D;&#x3D;</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610093933513.png-bugs_blog\" alt=\"image-20220610093933513\"></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610100500233.png-bugs_blog\" alt=\"image-20220610100500233\"></p>\n<p>我们通过433M接收模块引脚定义可以看到，最终模块处理好的数据就是通过一个DAT引脚输出的</p>\n<p>我们通过原理图可以看到，433M模块2,3脚其实是连在一起的，然后接到单片机<code>PA11</code>引脚。<br>所以首先从硬件上可以判断出，是通过433M模块是用<code>单口通讯来传输数据的</code>。</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610101828426.png-bugs_blog\" alt=\"image-20220610101828426\"></p></blockquote>\n<h2 id=\"EV1527和2262编码\"><a href=\"#EV1527和2262编码\" class=\"headerlink\" title=\"EV1527和2262编码\"></a><font color=#9400D3 >EV1527和2262编码</font></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>不管是电磁波也好，还是433M接收模块输出的数字信号也好，这都只是一种传输数据的<code>物理层媒介</code>。<br>就像人都能通过声音去和别人交流，但是除了有声音以外，你们语言(中文、英文)还得相同才能表达出彼此的想法</p>\n<p>那无线传输也是这样，有了传输渠道，那数据过去之后，双方还得有统一的数据格式，这样才能正确的还原原始数据</p>\n<p>而EV1527和2262就是一种<code>无线通讯的数据格式</code></p>\n<p>EV1527和2262都有专门的芯片去实现这种数据格式，但是我们产品为了节约成本，采用<code>软解码</code></p></blockquote>\n<h3 id=\"EV1527和2262数据格式\"><a href=\"#EV1527和2262数据格式\" class=\"headerlink\" title=\"EV1527和2262数据格式\"></a><font color=#FF0033 >EV1527和2262数据格式</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>同步头+24Bit数据+结束位</strong></p>\n<p>结束位一般不解码，所以我们一般关注同步头和24Bit数据</p>\n<p>同步头：<img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610111403837.png-bugs_blog\" alt=\"image-20220610111403837\"></p>\n<p>首先是&#x3D;&#x3D;4LCK&#x3D;&#x3D;的高电平脉宽，时间一般是&#x3D;&#x3D;400us&#x3D;&#x3D;，然后是&#x3D;&#x3D;124LCK&#x3D;&#x3D;低电平脉宽，时间一般是&#x3D;&#x3D;12.4ms&#x3D;&#x3D;高电平和低电平是&#x3D;&#x3D;31倍&#x3D;&#x3D;的关系</p>\n<p><strong>24Bit数据定义</strong>：总共3个字节，前20位是地址码，后面4位是数据码</p>\n<p>比如&#x3D;&#x3D;0xAA 0xBB 0xC2&#x3D;&#x3D;<br><code>AABBC</code>是<code>地址码</code>，<code>2</code>是<code>数据码</code></p>\n<p>地址码每个探测器唯一，相同的探测器地址码不同，数据码相同，比如说门磁开门是0x0A，关门0x0B等等。</p>\n<p>我们数据传输的时候，是一个个Bit这样去传输的，用不同的脉宽代表Bit”0”和Bit”1”</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610115945598.png-bugs_blog\" alt=\"image-20220610115945598\"></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610120143016.png\" alt=\"image-20220610120143016\"></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610121536606.png-bugs_blog\" alt=\"image-20220610121536606\"></p>\n<p>这个时间可能不同的厂家做出来的探测器各不同，但是专业的都知道高低电平是遵循3倍的关系</p>\n<p>那数据位一共是需要传输3个字节，也就是24个Bit</p>\n<p>还有最后一个结束位，一般不解码</p></blockquote>\n<h3 id=\"EV1527和2262编码有什么区别\"><a href=\"#EV1527和2262编码有什么区别\" class=\"headerlink\" title=\"EV1527和2262编码有什么区别\"></a><font color=#FF0033 >EV1527和2262编码有什么区别</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>两种编码方式就是地址位和数据位的区别。</p>\n<p>EV1527是20个Bit的地址码，4个Bit的数据码。<br>2262是16个Bit的地址码，8个Bit的数据码。</p>\n<p>EV1527牺牲了数据码位数，增加了地址码位数，减少了不同设备的重复几率。</p>\n<p>2262牺牲了地址码位数，增加了数据码位数。</p></blockquote>\n<h3 id=\"一帧数据的波形图\"><a href=\"#一帧数据的波形图\" class=\"headerlink\" title=\"一帧数据的波形图\"></a><font color=#FF0033 >一帧数据的波形图</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610124743986.png-bugs_blog\" alt=\"image-20220610124743986\"></p></blockquote>\n<h3 id=\"多帧数据的波形图\"><a href=\"#多帧数据的波形图\" class=\"headerlink\" title=\"多帧数据的波形图\"></a><font color=#FF0033 >多帧数据的波形图</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610124932341.png-bugs_blog\" alt=\"image-20220610124932341\"></p>\n<p>做探测器的时候，一般触发一次要发<code>15-20帧数据</code>，根据<code>主机来调节</code>，理论上帧数越多主机越容易接收到，但是发的<code>数据帧越多功耗也越大</code>，也更占用频段，可能会干扰到其他探测器触发后发送的数据</p>\n<p>一般触发一次要发15-20帧数据，因为数据最终通过<code>电磁波</code>传播，存在太多不确定性。比如<code>同频干扰</code>，<code>环境影响</code>等等，&#x3D;&#x3D;数据从电磁波解码成数字信号&#x3D;&#x3D;到单片机的时候，前面几帧可能都是不完整的，所以你如果只发1帧甚至几帧数据的话，基本上灵敏度非常低，经常接收不到</p>\n<p>具体发多少帧，一般是根据主机来调节，如果主机程序写的好的话，通常15帧足以，理论上帧数越多主机越容易接收到，但是发的数据帧越多功耗也越大，也更占用频段，可能会干扰到其他探测器触发后发送的数据。</p></blockquote>\n<h3 id=\"代码实现思路\"><a href=\"#代码实现思路\" class=\"headerlink\" title=\"代码实现思路\"></a><font color=#FF0033 >代码实现思路</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>把串行输入的编码数据帧，还原成编码之前的状态，读取其中的地址码和按键码，称之为&#x3D;&#x3D;解码&#x3D;&#x3D;。</p>\n<p>数据帧都是由&#x3D;&#x3D;同步头&#x3D;&#x3D;开始，然后是 &#x3D;&#x3D;24位&#x3D;&#x3D;的数据码，并且此数据帧在门磁探测器、遥控器等按键的过程中是重复出现的，我们首先要判断同步码，判断出了同步码，就知道数据码是从那一位开始了。对于一款量产的无线探测器来说，他的编码是固定值，也就是说它发射的数据帧的脉冲宽度是不变的，所以我们可以通过测量高低脉冲宽度的方式来分辨同步码、逻辑“1”、逻辑“0”</p>\n<p>具体的方法是这样的，首先启用定时器，定时器产生一个50us的定时中断。在中断程序中，我们读取数据输入引脚的状态，如果为高电平，就在高电平状态累加计数，反之就在低电平状态计数，当电平发生上升沿变化的时候，判断接收到的高低电平宽度的值是否符合同步信号的要求，如果符合就进入数据位的接收，以同样的方式判断逻辑“1”或逻辑“0”。如果接收过程中出现不符合要求的电平状态，就退出接收，为了增加可靠性和灵敏度，我们一般要求做容错机制，就是除了判断高低电平脉宽以外，还要算它们高低电平脉宽的倍数，把它范围适当加大，比如说&#x3D;&#x3D;实际是3倍。那我们可以设置成2-5倍&#x3D;&#x3D;，这样能最大程度满足灵敏度的需求，但是范围也不能调太广，否则会产生误报，这个都是根据产品量产验证后得来的经验和数据。</p></blockquote>\n<h3 id=\"代码实战\"><a href=\"#代码实战\" class=\"headerlink\" title=\"代码实战\"></a><font color=#FF0033 >代码实战</font></h3><h4 id=\"RF解码流程：\"><a href=\"#RF解码流程：\" class=\"headerlink\" title=\"RF解码流程：\"></a><font color=#0000CC >RF解码流程：</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>配置无线接收GPIO为输入模式</li>\n<li>创建50us定时器中断，并在中断函数里读取无线接收GPIO电平存起来丢进队列。</li>\n<li>创建一个RF解码任务，轮训任务里对电平队列里的数据进行解析</li>\n</ol></blockquote>\n<h4 id=\"解码任务数据解析流程\"><a href=\"#解码任务数据解析流程\" class=\"headerlink\" title=\"解码任务数据解析流程\"></a><font color=#0000CC >解码任务数据解析流程</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>先把队列电平&#x3D;&#x3D;数据取出&#x3D;&#x3D;，把高低电平脉宽时间都计算出来丢进&#x3D;&#x3D;脉宽队列&#x3D;&#x3D;。</li>\n<li>解析脉宽队列数据，开始判断同步头。</li>\n<li>如果同步头判断成功，则进入真正的RF数据解析，根据脉宽来判断是Bit”1”或者Bit”0”。</li>\n<li>连续接收到24个Bit有效数据后把数据整合成到数据里，数组大小是3个字节。</li>\n<li>通过回调函数把数据传递给应用层。</li>\n</ol></blockquote>\n<h4 id=\"hal-RFDConfig-RFD底层配置函数\"><a href=\"#hal-RFDConfig-RFD底层配置函数\" class=\"headerlink\" title=\"hal_RFDConfig  RFD底层配置函数\"></a><font color=#0000CC >hal_RFDConfig  RFD底层配置函数</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610153926966.png-bugs_blog\" alt=\"image-20220610153926966\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//RFD底层IO口配置函数</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hal_RFDConfig</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tGPIO_InitTypeDef GPIO_InitStructure<span class=\"token punctuation\">;</span>\t\n\t<span class=\"token comment\">//开时钟</span>\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RFD_RX_GPIO_CLK<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> RFD_RX_PIN<span class=\"token punctuation\">;</span>\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_50MHz<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//上拉输入，CPU可以随时读取IO口的电平状态，减少干扰</span>\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_IPU<span class=\"token punctuation\">;</span> \n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>RFD_RX_PORT<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"hal-GetRFDIOSta-接收RFD-io口电平状态函数\"><a href=\"#hal-GetRFDIOSta-接收RFD-io口电平状态函数\" class=\"headerlink\" title=\"hal_GetRFDIOSta  接收RFD io口电平状态函数\"></a><font color=#0000CC >hal_GetRFDIOSta  接收RFD io口电平状态函数</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220610154557022.png-bugs_blog\" alt=\"image-20220610154557022\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//获取RFD接收IO口电平状态</span>\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">uint8_t</span> <span class=\"token function\">hal_GetRFDIOSta</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GPIO_ReadInputDataBit</span><span class=\"token punctuation\">(</span>RFD_RX_PORT<span class=\"token punctuation\">,</span> RFD_RX_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"hal-PulseAQT-Handle-RFD脉冲采集中断函数\"><a href=\"#hal-PulseAQT-Handle-RFD脉冲采集中断函数\" class=\"headerlink\" title=\"hal_PulseAQT_Handle  RFD脉冲采集中断函数\"></a><font color=#0000CC >hal_PulseAQT_Handle  RFD脉冲采集中断函数</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220611075053500.png-bugs_blog\" alt=\"image-20220611075053500\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//RFD脉冲采集(Acquisition)，这个作为回调函数放在50us定时器中断里</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hal_PulseAQT_Handle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token class-name\">uint8_t</span> Temp<span class=\"token punctuation\">,</span> Count1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tTemp <span class=\"token operator\">&lt;&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hal_GetRFDIOSta</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t\tTemp <span class=\"token operator\">|=</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token keyword\">else</span> \n\t\tTemp <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>Count1 <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tCount1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">QueueDataPush</span><span class=\"token punctuation\">(</span>RFDBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token function\">hal_ResetTimer</span><span class=\"token punctuation\">(</span>T_RFD_RCV<span class=\"token punctuation\">,</span>T_STA_START<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"hal-RFDProc-RFD任务函数-我写的函数中最恶心的一个\"><a href=\"#hal-RFDProc-RFD任务函数-我写的函数中最恶心的一个\" class=\"headerlink\" title=\"hal_RFDProc  RFD任务函数  (我写的函数中最恶心的一个)\"></a><font color=#0000CC >hal_RFDProc  RFD任务函数  (我写的函数中最恶心的一个)</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>这个解码比较长，需要考虑容错率，大概200行，我除了红黑就他最恶心了</strong></p>\n<p>所以分段讲解</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220611091433227.png-bugs_blog\" alt=\"image-20220611091433227\"></p>\n<p><strong>这里有一个细节就是我case RFD_READ_CLKLEN里面没有break，也就是脉宽计数结束后，直接进入下一个case</strong></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220611110349450.png-bugs_blog\" alt=\"image-20220611110349450\"></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220611152212577.png-bugs_blog\" alt=\"image-20220611152212577\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//RFD任务函数</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">hal_RFDProc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//创建一个脉宽队列</span>\n\tQueue256 ClkTimeBuff<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token class-name\">uint16_t</span> Time1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Time2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token class-name\">uint8_t</span> ReadDataFlag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token class-name\">uint8_t</span> Len<span class=\"token punctuation\">,</span> Code<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token class-name\">uint8_t</span> CodeTempBuff<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//收码</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>RFDRcvSteps<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\t\t\t\n\t\t<span class=\"token keyword\">case</span> RFD_READ_CLKLEN<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">uint8_t</span> Temp<span class=\"token punctuation\">,</span> Num<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">static</span> <span class=\"token class-name\">uint8_t</span> Dsta <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">static</span> <span class=\"token class-name\">uint16_t</span> Count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">QueueEmpty</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>RFDBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tNum <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\t\t\t\t\n\t\t\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>Num<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Dsta<span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">//1</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>Temp<span class=\"token operator\">&amp;</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">//这里检测电平是否为低，如果为低代表高电平脉宽结束</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">uint8_t</span> Data<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tData <span class=\"token operator\">=</span> Count <span class=\"token operator\">/</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//存储高电平脉宽高字节</span>\n\t\t\t\t\t\t\t\tData <span class=\"token operator\">|=</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">//电平标志 1为高 0为低</span>\n\t\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPush</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Data<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tData <span class=\"token operator\">=</span> Count <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//存储高电平脉宽低字节</span>\n\t\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPush</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Data<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token comment\">//注意这里Data的值x50us等于脉宽时间</span>\n\t\t\t\t\t\t\t\tDsta <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">//0</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Temp<span class=\"token operator\">&amp;</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">//这里检测电平是否为高，如果为高代表低电平脉宽结束</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t<span class=\"token class-name\">uint8_t</span> Data<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tData <span class=\"token operator\">=</span> Count <span class=\"token operator\">/</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//存储低电平脉宽高字节</span>\n\t\t\t\t\t\t\t\t<span class=\"token comment\">//Data &amp;= 0xFF7F;\t\t//电平标志 1为高 0为低</span>\n\t\t\t\t\t\t\t\tData <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">;</span>\t\t    <span class=\"token comment\">//Bit7为脉宽电平标志,1为高 0为低</span>\n\t\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPush</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Data<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tData <span class=\"token operator\">=</span> Count <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//存储低电平脉宽低字节</span>\n\t\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPush</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Data<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t\t\t\t\t\t\t<span class=\"token comment\">//注意这里Data的值x50us等于脉宽时间</span>\n\t\t\t\t\t\t\t\tDsta <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\tCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tTemp <span class=\"token operator\">&lt;&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">case</span> RFD_READ_DATA<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">QueueDataSize</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">//判断有没波形数据</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">//读头</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ReadDataFlag<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> Temp<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Time1 <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>Time2<span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Time1<span class=\"token punctuation\">)</span>\t\t\n\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">//获取第一个波形数据</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token comment\">//Driver_GUART1SendByByter('*');</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Temp<span class=\"token operator\">&amp;</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">//先获取高电平波形</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t\t\t\tTemp <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\t\tTime1 <span class=\"token operator\">=</span> Temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\t\tTime1 <span class=\"token operator\">+=</span> Temp<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\t\tTime2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">QueueDataSize</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\t\t\t\t\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Time2<span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">//获取低电平波形</span>\n\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\tTime2 <span class=\"token operator\">=</span> Temp <span class=\"token operator\">*</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\tTime2 <span class=\"token operator\">+=</span> Temp<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">//判断高电平*20时间，和高电平*44的时间</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Time2 <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span>Time1<span class=\"token operator\">*</span>RFD_TITLE_CLK_MINL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Time2 <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>Time1<span class=\"token operator\">*</span>RFD_TITLE_CLK_MAXL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\tTime1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tTime2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tLen <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tReadDataFlag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\t\t\n\t\t\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\tTime1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tTime2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\t\n\t\t\t\t<span class=\"token comment\">//读数据\t\t</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ReadDataFlag<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> Temp<span class=\"token punctuation\">;</span>\n\t\t\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Time1<span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">//这里经过头验证后，第一个字节肯定是高电平，所以要&amp;0x7F把高电平标志位清除</span>\n\t\t\t\t\t\t\t\tTemp <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tTime1 <span class=\"token operator\">=</span> Temp <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tTime1 <span class=\"token operator\">+=</span> Temp<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tTime2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\t\t\t\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Time2<span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\tbool RecvSuccFlag<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\tTime2 <span class=\"token operator\">=</span> Temp <span class=\"token operator\">*</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token function\">QueueDataPop</span><span class=\"token punctuation\">(</span>ClkTimeBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\tTime2 <span class=\"token operator\">+=</span> Temp<span class=\"token punctuation\">;</span>\t\t\n\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Time1 <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>Time2<span class=\"token operator\">*</span>RFD_DATA_CLK_MINL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  \n\t\t\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Time1 <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>Time2<span class=\"token operator\">*</span>RFD_DATA_CLK_MAXL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> i<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token comment\">//'1'</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> Len<span class=\"token operator\">%</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t\tc <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\tc <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t\t\tCode<span class=\"token punctuation\">[</span>Len<span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|=</span> c<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tRecvSuccFlag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> \n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\t\t\n\t\t\t\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Time2 <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>Time1<span class=\"token operator\">*</span>RFD_DATA_CLK_MINL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t     <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Time2 <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>Time1<span class=\"token operator\">*</span>RFD_DATA_CLK_MAXL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> i<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xFF7F</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token comment\">//'0'</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> Len<span class=\"token operator\">%</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t\tc <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\tc <span class=\"token operator\">|=</span> <span class=\"token number\">0x0080</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t\t\tCode<span class=\"token punctuation\">[</span>Len<span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;=</span> c<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tRecvSuccFlag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t<span class=\"token comment\">//error</span>\n\t\t\t\t\t\t\t\tRecvSuccFlag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\tReadDataFlag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t\tTime1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\tTime2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>Len <span class=\"token operator\">==</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">&amp;&amp;</span> RecvSuccFlag<span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\tReadDataFlag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CodeTempBuff<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>Code<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t <span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>CodeTempBuff<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>Code<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t <span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>CodeTempBuff<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>Code<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token function\">RFD_CodeHandle</span><span class=\"token punctuation\">(</span>Code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>CodeTempBuff<span class=\"token punctuation\">,</span> Code<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\t\t\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"hal-RFDDecodeFlt-Handle-RFD重复码过滤处理\"><a href=\"#hal-RFDDecodeFlt-Handle-RFD重复码过滤处理\" class=\"headerlink\" title=\"hal_RFDDecodeFlt_Handle  RFD重复码过滤处理\"></a><font color=#0000CC >hal_RFDDecodeFlt_Handle  RFD重复码过滤处理</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>创建定时器的时候丢进去</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20220611165807968.png-bugs_blog\" alt=\"image-20220611165807968\"></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//RFD重复码过滤处理，1s内有重复码的话不做重复处理，这个作为回调函数放在1s定时器中断里</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hal_RFDDecodeFlt_Handle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\t\t \n\tRFD_DecodeFltTimerOk <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"RFD-CodeHandle-RFD代码过滤函数\"><a href=\"#RFD-CodeHandle-RFD代码过滤函数\" class=\"headerlink\" title=\"RFD_CodeHandle  RFD代码过滤函数\"></a><font color=#0000CC >RFD_CodeHandle  RFD代码过滤函数</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>不仅仅有过滤作用，还有把数据传给应用层的作用</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"hal-RFCRcvCBSRegister-RFD接收回调注册函数\"><a href=\"#hal-RFCRcvCBSRegister-RFD接收回调注册函数\" class=\"headerlink\" title=\"hal_RFCRcvCBSRegister  RFD接收回调注册函数\"></a><font color=#0000CC >hal_RFCRcvCBSRegister  RFD接收回调注册函数</font></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span></blockquote>\n<h3 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a><font color=#FF0033 >应用层</font></h3><h4 id=\"RfdRcvHandle-RFD接收回调函数\"><a href=\"#RfdRcvHandle-RFD接收回调函数\" class=\"headerlink\" title=\"RfdRcvHandle  RFD接收回调函数\"></a><font color=#0000CC >RfdRcvHandle  RFD接收回调函数</font></h4><blockquote></blockquote>\n<h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a><font color=#9400D3 >二级标题</font></h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a><font color=#FF0033 >三级标题</font></h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a><font color=#0000CC >四级标题</font></h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a><font color=#FF00FF >五级标题</font></h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a><font color=#00CC00 >六级标题</font></h6>","feature":true,"text":"WIFI主机 现在才是产品阶段 433M无线通讯的一些常识 我们这个主机是防盗报警主机，所以必须要配合周边传感器形成一道防御网络，比如说门磁传感器装在大门，开门后，门磁探测器触发然后通过433MHz频段的无线发送一组数据给主机，然后主机接收到就报警。 为什么要用无线 因为免去了布...","link":"","photos":[],"count_time":{"symbolsCount":"9.3k","symbolsTime":"8 mins."},"categories":[{"name":"单片机","slug":"单片机","count":13,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":13,"path":"api/tags/STM32.json"},{"name":"主机","slug":"主机","count":13,"path":"api/tags/主机.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#WIFI%E4%B8%BB%E6%9C%BA\"><span class=\"toc-text\">WIFI主机</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#433M%E6%97%A0%E7%BA%BF%E9%80%9A%E8%AE%AF%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%AF%86\"><span class=\"toc-text\">433M无线通讯的一些常识</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A0%E7%BA%BF%E6%8E%A5%E6%94%B6%E6%A8%A1%E5%9D%97%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">无线接收模块简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EV1527%E5%92%8C2262%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">EV1527和2262编码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#EV1527%E5%92%8C2262%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">EV1527和2262数据格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#EV1527%E5%92%8C2262%E7%BC%96%E7%A0%81%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">EV1527和2262编码有什么区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E5%B8%A7%E6%95%B0%E6%8D%AE%E7%9A%84%E6%B3%A2%E5%BD%A2%E5%9B%BE\"><span class=\"toc-text\">一帧数据的波形图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E5%B8%A7%E6%95%B0%E6%8D%AE%E7%9A%84%E6%B3%A2%E5%BD%A2%E5%9B%BE\"><span class=\"toc-text\">多帧数据的波形图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">代码实现思路</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">代码实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#RF%E8%A7%A3%E7%A0%81%E6%B5%81%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">RF解码流程：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E7%A0%81%E4%BB%BB%E5%8A%A1%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">解码任务数据解析流程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#hal-RFDConfig-RFD%E5%BA%95%E5%B1%82%E9%85%8D%E7%BD%AE%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">hal_RFDConfig  RFD底层配置函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#hal-GetRFDIOSta-%E6%8E%A5%E6%94%B6RFD-io%E5%8F%A3%E7%94%B5%E5%B9%B3%E7%8A%B6%E6%80%81%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">hal_GetRFDIOSta  接收RFD io口电平状态函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#hal-PulseAQT-Handle-RFD%E8%84%89%E5%86%B2%E9%87%87%E9%9B%86%E4%B8%AD%E6%96%AD%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">hal_PulseAQT_Handle  RFD脉冲采集中断函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#hal-RFDProc-RFD%E4%BB%BB%E5%8A%A1%E5%87%BD%E6%95%B0-%E6%88%91%E5%86%99%E7%9A%84%E5%87%BD%E6%95%B0%E4%B8%AD%E6%9C%80%E6%81%B6%E5%BF%83%E7%9A%84%E4%B8%80%E4%B8%AA\"><span class=\"toc-text\">hal_RFDProc  RFD任务函数  (我写的函数中最恶心的一个)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#hal-RFDDecodeFlt-Handle-RFD%E9%87%8D%E5%A4%8D%E7%A0%81%E8%BF%87%E6%BB%A4%E5%A4%84%E7%90%86\"><span class=\"toc-text\">hal_RFDDecodeFlt_Handle  RFD重复码过滤处理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#RFD-CodeHandle-RFD%E4%BB%A3%E7%A0%81%E8%BF%87%E6%BB%A4%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">RFD_CodeHandle  RFD代码过滤函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#hal-RFCRcvCBSRegister-RFD%E6%8E%A5%E6%94%B6%E5%9B%9E%E8%B0%83%E6%B3%A8%E5%86%8C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">hal_RFCRcvCBSRegister  RFD接收回调注册函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%B1%82\"><span class=\"toc-text\">应用层</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#RfdRcvHandle-RFD%E6%8E%A5%E6%94%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">RfdRcvHandle  RFD接收回调函数</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">二级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">三级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">四级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BA%94%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">五级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E5%85%AD%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">六级标题</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"独走繁华，花难入眼。哈哈","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"mapped":true,"prev_post":{"title":"WIFI主机-高端技巧","uid":"a9e5c50c2e33194989c356519407f89c","slug":"wifi主机/wifi主机第三部分  高端手法","date":"2020-08-15T10:49:36.000Z","updated":"2023-01-23T11:50:34.855Z","comments":true,"path":"api/articles/wifi主机/wifi主机第三部分  高端手法.json","keywords":null,"cover":"https://cover.png","text":"WIFI主机 到了这里中断就要深入了解，定时器高端玩法。。。。 这里我们带着一个问题去，就是玩过STC的单片机大家都是知道中断是有一个中断向量入口的，但是STM32中断函数我们是不是没有interrupt这个向量入口。那么他是如何触发中断的，我们下面就会看看中断向量表。 中断中断...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"单片机","slug":"单片机","count":13,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":13,"path":"api/tags/STM32.json"},{"name":"主机","slug":"主机","count":13,"path":"api/tags/主机.json"}],"author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"独走繁华，花难入眼。哈哈","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"feature":true},"next_post":{"title":"WIFI主机-宗师","uid":"91f6d7c8b6037035fbfa6686cc2db239","slug":"wifi主机/wifi主机第九部分  宗师一方","date":"2020-08-15T10:49:36.000Z","updated":"2023-01-23T12:02:15.320Z","comments":true,"path":"api/articles/wifi主机/wifi主机第九部分  宗师一方.json","keywords":null,"cover":"https://cover.png","text":"WIFI主机 这一篇与主机无关，完全就是瓶颈突破 MDK的编译过程及文件类型全解 我们已经非常熟练地使用MDK创建应用程序了，平时使用MDK编写源代码，然后编译生成机器码，再把机器码下载到STM32芯片上运行，但是这个编译、下载的过程MDK究竟做了什么工作？它编译后生成的各种文件...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"单片机","slug":"单片机","count":13,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":13,"path":"api/tags/STM32.json"},{"name":"主机","slug":"主机","count":13,"path":"api/tags/主机.json"}],"author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"独走繁华，花难入眼。哈哈","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"feature":true}}