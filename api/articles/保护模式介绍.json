{"title":"保护模式","uid":"199547ff1b7fb284f5e822193d2b7a56","slug":"保护模式介绍","date":"2020-08-15T10:49:36.000Z","updated":"2022-12-14T08:18:52.018Z","comments":true,"path":"api/articles/保护模式介绍.json","keywords":null,"cover":"https://cover.png","content":"<h1 id=\"保护模式\"><a href=\"#保护模式\" class=\"headerlink\" title=\"保护模式\"></a>保护模式</h1><h2 id=\"x86-CPU的三种模式\"><a href=\"#x86-CPU的三种模式\" class=\"headerlink\" title=\"x86 CPU的三种模式\"></a>x86 CPU的三种模式</h2><p>x86 CPU有3种模式：实模式、保护模式和虚拟8086模式</p>\n<p>现在的操作系统大多都是处于保护模式下</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">实模式</th>\n<th align=\"left\">保护模式</th>\n<th align=\"left\">虚拟8086模式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">内存寻址方式</td>\n<td align=\"left\">段式寻址</td>\n<td align=\"left\">支持内存分页和虚拟内存</td>\n<td align=\"left\">段式寻址</td>\n</tr>\n<tr>\n<td align=\"left\">寻址范围</td>\n<td align=\"left\">任意寻址</td>\n<td align=\"left\">有限</td>\n<td align=\"left\">任意寻址</td>\n</tr>\n<tr>\n<td align=\"left\">举例系统</td>\n<td align=\"left\">dos系统</td>\n<td align=\"left\">Windows系统</td>\n<td align=\"left\">？</td>\n</tr>\n</tbody></table>\n<p>上面只是简单列举了三种模式的一些区别，具体细节不作深入</p>\n<p>只需要明确一点：保护模式相比于其它两种模式，根本在于<strong>进程内存</strong>受到了保护</p>\n<hr>\n<h2 id=\"x86和x64\"><a href=\"#x86和x64\" class=\"headerlink\" title=\"x86和x64\"></a>x86和x64</h2><p>想必不少人会疑问，现在大多数计算机都是x64的了，为什么还在讲x86？</p>\n<p>因为x64是<strong>向下兼容</strong>x86的</p>\n<ul>\n<li>x86：由Intel推出的一种复杂指令集,能够生产支持这种指令集CPU公司<strong>主要</strong>是Intel和AMD</li>\n<li>x64：AMD在1999年的时候，<strong>拓展</strong>了这套指令集，称为x86-64,后改名为<strong>AMD64</strong>,Intel也<strong>兼容</strong>了这个产品，称为<strong>Intel 64</strong>.但AMD64和Intel64，<strong>几乎是一样的</strong>，所以在很多资料中统称为x64</li>\n</ul>\n<hr>\n<h2 id=\"什么是保护模式\"><a href=\"#什么是保护模式\" class=\"headerlink\" title=\"什么是保护模式\"></a>什么是保护模式</h2><p>保护模式是基于安全性和稳定性的考量而产生的一种<strong>CPU模式</strong></p>\n<hr>\n<h2 id=\"保护模式的两大特点\"><a href=\"#保护模式的两大特点\" class=\"headerlink\" title=\"保护模式的两大特点\"></a>保护模式的两大特点</h2><p>前面说过保护模式区别于其它两种模式的根本是在<strong>进程内存</strong>上</p>\n<p>所以保护模式的两大特点也是基于内存的：</p>\n<ul>\n<li>段的机制（内存分段）</li>\n<li>页的机制（内存分页）</li>\n</ul>\n<hr>\n<h2 id=\"为什么要学习保护模式\"><a href=\"#为什么要学习保护模式\" class=\"headerlink\" title=\"为什么要学习保护模式\"></a>为什么要学习保护模式</h2><p>因为现在的Window系统都是基于保护模式运作的</p>\n<p>所以学习保护模式后才能真正地理解<strong>内核</strong>是如何运作的</p>\n<p>并且通过保护模式的知识，可以实现 <strong>提权操作</strong>（在应用层做到内核层才能做的事）</p>\n<p>不了解保护模式，就相当于写的程序不过是在调用WinAPI而已：在应用层(ring3)调用应用层API，在内核层(ring0)调用内核层API</p>\n<p>并且由于保护模式对进程内存的保护，在学习它之后，能够对<strong>内存</strong>有进一步的认识</p>\n<hr>\n<h1 id=\"参考书籍\"><a href=\"#参考书籍\" class=\"headerlink\" title=\"参考书籍\"></a>参考书籍</h1><p><a href=\"https://software.intel.com/content/dam/develop/external/us/en/documents-tps/325462-sdm-vol-1-2abcd-3abcd.pdf\">英特尔®64和IA-32体系结构软件开发人员手册合并卷</a></p>\n<h2 id=\"详细说明\"><a href=\"#详细说明\" class=\"headerlink\" title=\"详细说明\"></a>详细说明</h2><p>本文档包含以下内容：</p>\n<p><strong>第1卷：</strong>介绍支持IA-32和Intel®64体系结构的处理器的体系结构和编程环境。</p>\n<p><strong>第2卷：</strong>包括完整的指令集参考AZ。描述说明的格式，并提供说明的参考页。</p>\n<p><strong>第3卷：</strong>包括完整的系统编程指南，第1、2、3和4部分。描述了Intel®64和IA-32体系结构的操作系统支持环境，包括：内存管理，保护，任务管理，中断和异常处理，多处理器支持，热和电源管理功能，调试，性能监控，系统管理模式，虚拟机扩展（VMX）指令，英特尔®虚拟化技术（英特尔®VT）和英特尔®软件保护扩展（英特尔®SGX） ）。</p>\n<p><strong>第4卷：</strong>描述了支持IA-32和Intel®64体系结构的处理器的特定于模型的寄存器。</p>\n","feature":true,"text":"保护模式x86 CPU的三种模式x86 CPU有3种模式：实模式、保护模式和虚拟8086模式 现在的操作系统大多都是处于保护模式下 实模式 保护模式 虚拟8086模式 内存寻址方式 段式寻址 支持内存分页和虚拟内存 段式寻址 寻址范围 任意寻址 有限 任意寻址 举例系统 dos系...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Cate","slug":"Cate","count":1,"path":"api/categories/Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":1,"path":"api/tags/Tag.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">保护模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#x86-CPU%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">x86 CPU的三种模式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#x86%E5%92%8Cx64\"><span class=\"toc-text\">x86和x64</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">什么是保护模式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E7%9A%84%E4%B8%A4%E5%A4%A7%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">保护模式的两大特点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E4%B9%A0%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">为什么要学习保护模式</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E4%B9%A6%E7%B1%8D\"><span class=\"toc-text\">参考书籍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%A6%E7%BB%86%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">详细说明</span></a></li></ol></li></ol>","author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"一旦错过，愿你安好","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"mapped":true,"prev_post":{"title":"WIFI主机-催眠师手札","uid":"c6db4d1ad0c97adc524f1401c6716083","slug":"wifi主机/wifi主机第一部分  催眠师手札","date":"2020-08-15T10:49:36.000Z","updated":"2022-12-14T13:08:15.807Z","comments":true,"path":"api/articles/wifi主机/wifi主机第一部分  催眠师手札.json","keywords":null,"cover":"https://cover.png","text":"WIFI主机 有些函数名后面写的时候会改一下名字，方面整体记忆。比如Systick_ms改为hal_SystickCoreClockInit 项目中的一些细节 GPIO 我们wifi主机采用的信号是STM32F103C8T6，封装就是LQFP48 ，flash大小就是64K,GP...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"单片机","slug":"单片机","count":12,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":12,"path":"api/tags/STM32.json"},{"name":"主机","slug":"主机","count":12,"path":"api/tags/主机.json"}],"author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"一旦错过，愿你安好","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"feature":true},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"调用门提权（无参+有参）","date":"2022-12-14T07:19:32.629Z","updated":"2022-09-27T05:44:13.127Z","comments":true,"path":"api/articles/调用门提权（无参+有参）.json","keywords":null,"cover":[],"text":"调用门调用门的作用调用门可以用来提权，通过提权可以实现访问高地址空间等RING0（内核）层才能进行的操作 调用门和长调用关系回顾先前的笔记可知： 长调用CALL FAR CS:EIP指令要调用的地址是由CS段选择子查GDT得到的调用门 段描述符得来的，后面的EIP不发挥作用 调用...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[],"tags":[],"author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"一旦错过，愿你安好","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}}}}