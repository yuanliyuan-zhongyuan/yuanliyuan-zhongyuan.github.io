{"title":"计算机基本概念","uid":"286b062a4c68912f896e860814387b01","slug":"逆向魔王/组原/3.虫壳组原 计算机的基本概念","date":"2022-12-15T10:49:36.000Z","updated":"2023-02-17T07:47:57.750Z","comments":true,"path":"api/articles/逆向魔王/组原/3.虫壳组原 计算机的基本概念.json","keywords":null,"cover":"https://cover.png","content":"<h1 id=\"组原\"><a href=\"#组原\" class=\"headerlink\" title=\"组原\"></a><font color=#996633 >组原</font></h1><h2 id=\"计算机的基本概念\"><a href=\"#计算机的基本概念\" class=\"headerlink\" title=\"计算机的基本概念\"></a><font color=#9400D3 >计算机的基本概念</font></h2><h3 id=\"CPU：大脑\"><a href=\"#CPU：大脑\" class=\"headerlink\" title=\"CPU：大脑\"></a><font color=#FF0033 >CPU：大脑</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CPU是计算机的核心部件，它控制整个计算机的运作并进行运算。要想让一个CPU工作，必须向它提供指令和数据。而指令和数据在存储器中，也就是内存。PC机中，内存的作用仅次于CPU。没有内存，CPU就无法工作。<br>磁盘不等于内存，只有当磁盘存储的数据或程序只有被读取到内存中，才可以被CPU执行。</p></blockquote>\n<h3 id=\"指令和数据\"><a href=\"#指令和数据\" class=\"headerlink\" title=\"指令和数据\"></a><font color=#FF0033 >指令和数据</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>指令和数据是应用上的概念，计算机并不知道哪些是指令，哪些是数据。在内存或者磁盘中，指令和数据没有任何区别。CPU在工作的时候，把有些信息看成是指令，有些信息当作数据，为同样的信息赋予不同的意义。</p>\n<p>举例说明：<br>例如内存中的二进制信息1000100111011000，计算机可以把它看作为89D8H的数据来处理，也可以看作指令mov ax,bx来执行。<br>至于这种二进制编码是数据还是指令代码，具体识别的过程涉及到很多后面的知识，可以提前查阅一下资料。</p>\n<p><strong>&#x3D;&#x3D;计算机是如何判断指令和数据的&#x3D;&#x3D;</strong></p>\n<p>可以从多个角度来理解：编码规则，执行过程，寄存器和指针，其实计算机仅仅只是一台机器，是我们程序员给计算机输入指令，按照指令执行，也就是计算机只认识0和1，至于哪些是数据，哪些是指令，完全由程序员来控制的。</p>\n<p>&#x3D;&#x3D;可以根据不同的编码规则来识别，当做文字，数据，指令，视频，图片等不同的信息来处理&#x3D;&#x3D;</p>\n<p>指令编码:硬编码</p>\n<p>复杂指令编码CSIC:x86指令集</p>\n<p>简单指令编码RSIC:ARM指令集</p>\n<p>数值编码:整形类型，浮点类型，有符号数，无符号数，BCD码</p>\n<p>字符编码:ASCII码，Unicode编码，扫描码</p>\n<p>图片，视频，文本等多种编码格式和规则 </p></blockquote>\n<h3 id=\"存储单元\"><a href=\"#存储单元\" class=\"headerlink\" title=\"存储单元\"></a><font color=#FF0033 >存储单元</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>存储器被划分成若干个存储单元，每个存储单元从0开始顺序编号，<br>例如一个存储器有128个单元，编号从0-127可以看成很多个有门牌号的房间。</p>\n<img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230215154456924.png-bugs_blog\" alt=\"image-20230215154456924\" style=\"zoom:200%;\" />\n\n<p>&#x3D;&#x3D;存储容量&#x3D;&#x3D;</p>\n<p>一个存储单元可以存储多少信息？电子计算机的最小信息单位是bit,也就是一个二进制位，即一个存储元素可以存放一个0或者是1，<br>8个bit组成一个字节byte,即8个二进制位，一个存储器有128个存储单元，<br>表示可以存储128个字节(byte)。容量为128个字节。</p>\n<p>微机(P机)存储器的容量以字节为单位来计算的。<br>一个字节(byte&#x3D;8位，8个bit)</p>\n<p>一个字(word)&#x3D;2个字节(byte),16位</p>\n<p>一个双字(dword&#x3D;2个字，4个字节，32位)</p>\n<p>一个四字(dd&#x3D;2个双字，4个字，8个字节，64位)<br>对于大容量的存储器一般用一下单位计量容量：<br>1KB&#x3D;1024B(byte字节)</p>\n<p>1MB&#x3D;1024KB</p>\n<p>1GB&#x3D;1024MB</p>\n<p>1TB&#x3D;1024GB<br>数学题：1024B&#x3D;2^16^B,1MB&#x3D;2^20^B,1GB&#x3D;2^30^B,1TB&#x3D;2^40^B盘的容量表示方法一样。</p>\n<p>&#x3D;&#x3D;一个存储单元包含16个存储元素称为16位机器，32个存储元素称为32位机器，64个存储元素称为64位机器&#x3D;&#x3D;</p></blockquote>\n<h3 id=\"CPU对存储器的读写\"><a href=\"#CPU对存储器的读写\" class=\"headerlink\" title=\"CPU对存储器的读写\"></a><font color=#FF0033 >CPU对存储器的读写</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>需要三个条件</p>\n<ul>\n<li>存储单元地址(地址信息)</li>\n<li>器件的选择，读或写的命令(控制信息)</li>\n<li>读或写的数据(数据信息)</li>\n</ul>\n<p>CPU要从内存中读数据，首先要知道存储单元的地址，就是要确定从哪个存储单元中读取数据，存储器被划分成很多个存储单元，从零开始顺序编号，这些编号被看作是门牌号，方便查找，进房间找人，存储单元中要有数据，如果家里没人，就会找不到。</p>\n<p>其次，在一台微机中有很多个部件，CU读写数据时，要知道对哪个器件进行操作，进行哪种操作，是从中读数据，还是写入数据。</p>\n<p>CPU是通过什么将地址、数据和控制信息传送到存储芯片的呢？</p>\n<p>信息的传输：总线<br>计算机中专门有连接CPU和其他芯片的导线，通常称为总线，总线是这些导线的集合，用来传送的信息皆为电信号，高低电平。</p>\n<p>&#x3D;&#x3D;cpu内的控制时钟发出脉冲信号:高低电平&#x3D;&#x3D;</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230215162800074.png-bugs_blog\" alt=\"image-20230215162800074\"></p></blockquote>\n<h3 id=\"CPU对存储器的读写的过程\"><a href=\"#CPU对存储器的读写的过程\" class=\"headerlink\" title=\"CPU对存储器的读写的过程\"></a><font color=#FF0033 >CPU对存储器的读写的过程</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>总线逻辑上分为:地址总线，数据总线，控制总线3类</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230215163133952.png-bugs_blog\" alt=\"image-20230215163133952\"></p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230215163420822.png-bugs_blog\" alt=\"image-20230215163420822\"></p>\n<p> 进制0和1</p>\n<p>二进制的简写形式:16进制</p>\n<p>汇编指令:机器码的助记符，INTEL的开发手册为标准</p>\n<p>汇编指令的编码规则就是硬编码</p>\n<p>C语言有个项目就是做一个计算机的模拟器，编写机器指令，完成指定功能，算术运算，浮点数运算，然后我们还要自己发明一个新的高级语言，然后编写一个对应的编译器和解释器</p>\n<p>编译器将高级语言翻译成虚拟机的机器语言</p>\n<p>解释器直接用c语言执行高级语言指令，不需要翻译</p></blockquote>\n<h3 id=\"地址总线\"><a href=\"#地址总线\" class=\"headerlink\" title=\"地址总线\"></a><font color=#FF0033 >地址总线</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CPU是通过地址总线来指定存储单元的。因此，地址总线上可以传递多少个不同的信息，CPU就可以对多少个存储单元进行寻址。<br>假设：用0和1来编写门牌号，有2根地址总线，每次寻址2位，相应的门牌号也需要用2位数来编写，可以查找的门牌号是分别为00、01、10、11，一共4个&#x3D;2^2^。<br>电子计算机中，一根导线可以传递的稳定状态只有2种，高电平表示1，低电平表示0。10根导线一次可以传递10位二进制数据。<br>假设有10根地址总线，那么可以查找的门牌号为2^10^&#x3D;1024，地址范围是0~1023<br>N根地址总线，表示总线宽度为N,最多查找2^N^个内存单元。</p>\n<p>具有10根地址线的CPU向内存发出地址信息11(BH)时传送的二进制信息<br>思考：如果传送的是12,13,14，地址总线传送的内容是？<br>答案：CH 0000001100, DH 0000001101.EH 0000001110</p>\n<p><strong>&#x3D;&#x3D;内存地址空间&#x3D;&#x3D;</strong></p>\n<p>假如CPU的地址总线宽度为10，那么2^10^个内存单元，即1024个可以与寻到的内存单元称为该CPU的内存地址空间。</p>\n<p><img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230216010806170.png-bugs_blog\" alt=\"image-20230216010806170\"></p></blockquote>\n<h3 id=\"数据总线\"><a href=\"#数据总线\" class=\"headerlink\" title=\"数据总线\"></a><font color=#FF0033 >数据总线</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CPU与内存或其他器件之间的数据传送是通过数据总线来进行的。数据总线的宽度决定了CPU和外界的数据传送速度。8根数据总线一次可以传递8位二进制数数据&#x3D;1个字节。16根数据总线可以一次传递两个字节。N根数据总线，一次可以传递N&#x2F;8个字节。<br>8088CPU的数据总线宽度为8,8086CPU的数据总线宽度为16.举例：将数据89D8H写入内存<img src=\"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/image-20230216011048256.png-bugs_blog\" alt=\"image-20230216011048256\"></p></blockquote>\n<h3 id=\"控制总线\"><a href=\"#控制总线\" class=\"headerlink\" title=\"控制总线\"></a><font color=#FF0033 >控制总线</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CPU对外部器件的控制是通过控制总线进行的。有多少根控制总线就意味CPU提供了对外部器件的多少种控制。所以控制总线的宽度决定了CPU对外部器件的控制能力。<br>读命令：由“读信号输出”控制线负责由CPU向外传送读信号，CPU向该控制线输出低电平(0)表示将要读取数据：<br>写命令：由一根称为“写信号输出”的控制线负责传送写信号。</p></blockquote>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><font color=#FF0033 >总结</font></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>CPU离不开内存，内存存储数据提供给CPU使用</li>\n<li>在存储器中的数据和指令没有任何区别，都是二进制信息</li>\n<li>存储单元从0开始编号</li>\n<li>一个存储单元可以存放8bit，即8位二进制数，为一个字节</li>\n<li>1byte&#x3D;8bit 1KB&#x3D;1024B 1MB&#x3D;1024KB 1GB&#x3D;1024MB</li>\n<li>CPU和总线连接，CPU引出3种总线的宽度标志CPU不同方面的性能：<br>地址总线的宽度决定CPU的寻址能力。<br>数据总线的宽度决定CPU与其他器件进行数据传送时的一次传送量。<br>控制总线的宽度决定CPU对系统其他器件的控制能力。</li>\n</ol>\n<p><strong>&#x3D;&#x3D;数据在寄存器和内存之间的移动&#x3D;&#x3D;</strong></p>\n<p>计算机对内存的操作有两种</p>\n<ol>\n<li>以字节为单位的数据逻辑算术运算</li>\n<li>以数据位为单位的算术逻辑运算</li>\n</ol></blockquote>\n<h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a><font color=#9400D3 >二级标题</font></h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a><font color=#FF0033 >三级标题</font></h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a><font color=#0000CC >四级标题</font></h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a><font color=#FF00FF >五级标题</font></h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a><font color=#00CC00 >六级标题</font></h6>","feature":true,"text":"组原计算机的基本概念CPU：大脑 CPU是计算机的核心部件，它控制整个计算机的运作并进行运算。要想让一个CPU工作，必须向它提供指令和数据。而指令和数据在存储器中，也就是内存。PC机中，内存的作用仅次于CPU。没有内存，CPU就无法工作。磁盘不等于内存，只有当磁盘存储的数据或程序...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"组原","slug":"组原","count":4,"path":"api/categories/组原.json"}],"tags":[{"name":"逆向","slug":"逆向","count":6,"path":"api/tags/逆向.json"},{"name":"组原","slug":"组原","count":4,"path":"api/tags/组原.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%84%E5%8E%9F\"><span class=\"toc-text\">组原</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">计算机的基本概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CPU%EF%BC%9A%E5%A4%A7%E8%84%91\"><span class=\"toc-text\">CPU：大脑</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%87%E4%BB%A4%E5%92%8C%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">指令和数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E5%8D%95%E5%85%83\"><span class=\"toc-text\">存储单元</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CPU%E5%AF%B9%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E8%AF%BB%E5%86%99\"><span class=\"toc-text\">CPU对存储器的读写</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CPU%E5%AF%B9%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E8%AF%BB%E5%86%99%E7%9A%84%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">CPU对存储器的读写的过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%B0%E5%9D%80%E6%80%BB%E7%BA%BF\"><span class=\"toc-text\">地址总线</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E6%80%BB%E7%BA%BF\"><span class=\"toc-text\">数据总线</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6%E6%80%BB%E7%BA%BF\"><span class=\"toc-text\">控制总线</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">二级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">三级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">四级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BA%94%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">五级标题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E5%85%AD%E7%BA%A7%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">六级标题</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"独走繁华，花难入眼。哈哈","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"mapped":true,"prev_post":{"title":"计算机的组成","uid":"8b2fb86844f7ace5c779b63ed3f22891","slug":"逆向魔王/组原/2.虫壳组原 计算机的组成","date":"2022-12-15T10:49:36.000Z","updated":"2023-02-17T07:47:52.057Z","comments":true,"path":"api/articles/逆向魔王/组原/2.虫壳组原 计算机的组成.json","keywords":null,"cover":"https://cover.png","text":"组原计算机的组成硬件部分 控制寄存器 控制指令 数据寄存器 存储数据 状态寄存器 状态标志 冯诺依曼结构 缺点就是中间哪一步出错了就没有办法了 以存储为中心的计算机结构 多了一根反馈线，这个反馈线的意思是在我控制器控制外部设备的时候，你要给我一个反馈，假如我要控制输入设备，你这个...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"组原","slug":"组原","count":4,"path":"api/categories/组原.json"}],"tags":[{"name":"逆向","slug":"逆向","count":6,"path":"api/tags/逆向.json"},{"name":"组原","slug":"组原","count":4,"path":"api/tags/组原.json"}],"author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"独走繁华，花难入眼。哈哈","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"feature":true},"next_post":{"title":"计算机软件","uid":"ea5c65088673feada9e353a789756fec","slug":"逆向魔王/组原/4.虫壳组原 计算机软件","date":"2022-12-15T10:49:36.000Z","updated":"2023-02-17T07:48:04.282Z","comments":true,"path":"api/articles/逆向魔王/组原/4.虫壳组原 计算机软件.json","keywords":null,"cover":"https://cover.png","text":"组原多层次计算机系统 第0层不允许普通用户编写微指令，属于商业秘密。第1层机器语言指令集：是固化在处理器内部，执行移动、加法和乘法等操作，每条机器语言分成几条微指令执行。第2层操作系统：能够理解用户发出的诸如并执行程序、显示目录之类的交互命令。操作系统被翻译为机器码在第1层执行。...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"组原","slug":"组原","count":4,"path":"api/categories/组原.json"}],"tags":[{"name":"逆向","slug":"逆向","count":6,"path":"api/tags/逆向.json"},{"name":"组原","slug":"组原","count":4,"path":"api/tags/组原.json"}],"author":{"name":"虫子","slug":"blog-author","avatar":"https://zzypicgo.oss-cn-shanghai.aliyuncs.com/pic-go-master/img/hello2.png","link":"/","description":"独走繁华，花难入眼。哈哈","socials":{"github":"https://github.com/yuanliyuan-zhongyuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wei-yuan-88-76-79","csdn":"https://blog.csdn.net/qq_42832862","juejin":"https://juejin.cn/user/2507322433224183","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/387304134"}}}},"feature":true}}